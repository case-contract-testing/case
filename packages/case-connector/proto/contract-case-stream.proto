syntax = "proto3";

import "google/protobuf/struct.proto";

message ContractCaseConfig {
  message UsernamePassword {
    string username = 1;
    string password = 2;
  }

  string providerName = 1;
  string consumerName = 2;
  string logLevel = 3;
  string contractDir = 4;
  string contractFilename = 5;
  string publish = 6;
  string brokerCiAccessToken = 7;
  string brokerBaseUrl = 8;
  UsernamePassword brokerBasicAuth = 9;

  bool printResults = 10;
  bool throwOnFail = 11;

  repeated StateHandlerHandle stateHandlers = 12;
  map<string, TriggerFunctionHandle> triggerFunction = 13;

  TriggerFunctionHandle triggerAndTest = 14;

  string baseUrlUnderTest = 15; // Long term, this will be moved
}

// Shared communication types
message DefinitionHandle { string definitionId = 1; }

message ResultSuccess {}
message ResultSuccessHasMapPayload { google.protobuf.Struct map = 1; }
message ResultSuccessHasAnyPayload { google.protobuf.Value payload = 1; }
message ResultFailure {
  string kind = 1;
  string message = 2;
  string location = 3;
}

message BoundaryResult {
  oneof value {
    ResultSuccess success = 1;
    ResultSuccessHasMapPayload succesHasMap = 2;
    ResultSuccessHasAnyPayload successHasAny = 3;
    ResultFailure failure = 4;
  }
}

message StateHandlerHandle {
  enum Stage {
    SETUP = 0;
    TEARDOWN = 1;
  }
  string handle = 1;
  Stage stage = 2;
}

message TriggerFunctionHandle { string handle = 1; }

// Requests from client
message BeginDefinitionRequest {
  ContractCaseConfig config = 1;
  repeated string callerVersions = 4;
}

message RunExampleRequest {
  google.protobuf.Struct exampleDefinition = 2;
  ContractCaseConfig config = 3;
}

message RunRejectingExampleRequest {
  google.protobuf.Struct exampleDefinition = 2;
  ContractCaseConfig config = 3;
}

message StripMatchersRequest { google.protobuf.Struct matcherOrData = 2; }

message EndDefinitionRequest { DefinitionHandle handle = 1; }

message StateHandlerResponse {
  StateHandlerHandle stateHandlerHandle = 1;
  BoundaryResult result = 2;
}

message LogPrinterResponse { BoundaryResult result = 1; }
message ResultPrinterResponse { BoundaryResult result = 1; }

// Responses from server

message RunStateHandlerRequest { StateHandlerHandle stateHandlerHandle = 1; }
message TriggerFunctionRequest {
  TriggerFunctionHandle triggerFunction = 1;
  google.protobuf.Struct config = 2;
}

message LogRequest {
  /**
   * A `LogLevel` string, either `error`, `warn`, `debug`,
   * `maintainerDebug` or `deepMaintainerDebug` Use this to programmatically
   * decide any colour formatting.. (although `none` is a possible log level,
   * this function will never be called with `none`).
   */
  string level = 1;
  /**
   * The timestamp generated by ContractCase, ready for printing. No extra
   * formatting is necessary
   */
  string timestamp = 2;
  /**
   * The version string for the current ContractCase stack (at low log levels,
   * this is just the core version)
   */
  string version = 3;
  /**
   * A rendered version of the LogLevel. Do not rely on this value
   * programmatically, use the `level` parameter instead.
   */
  string typeString = 4;
  /**
   * A string that represents the location that this log came from
   */
  string location = 5;
  /**
   * The main message of this log line
   */
  string message = 6;
  /**
   * Any additional output to print on extra lines (you may want to indent this
   * when printing)
   */
  string additional = 7;
}

message PrintMatchErrorRequest {
  /**
   * The red highlighted blob, eg "MATCHING ERROR" or "TRIGGER FUNCTION ERROR".
   * Could be any string.
   */
  string kind = 1;
  /**
   * A summary of the error. Could be any string.
   */
  string message = 2;
  /**
   * The location the error happened, for printing at the top of the error
   * message
   */
  string location = 3;
  /**
   * The tag line for the location the error happened, for printing after the
   * error message. This might have more information than the `location` above.
   */
  string locationTag = 4;
  /**
   * The machine-readable type for the cause of this error, for printing after
   * the error message to make it easy to search for.
   */
  string errorTypeTag = 5;
  /**
   * A string representation of the expected data (may contain newlines)
   */
  string expected = 6;
  /**
   * A string representation of the actual data received (may contain newlines)
   */
  string actual = 7;
}

message PrintMessageErrorRequest {
  /**
   * The red highlighted blob, eg "MATCHING ERROR" or "TRIGGER FUNCTION ERROR".
   * Could be any string.
   */
  string kind = 1;
  /**
   * A summary of the error. Could be any string.
   */
  string message = 2;
  /**
   * The location the error happened, for printing at the top of the error
   * message
   */
  string location = 3;
  /**
   * The tag line for the location the error happened, for printing after the
   * error message. This might have more information than the `location` above.
   */
  string locationTag = 4;
  /**
   * The machine-readable type for the cause of this error, for printing after
   * the error message to make it easy to search for.
   */
  string errorTypeTag = 5;
}

message PrintTestTitleRequest {
  /**
   * Either 'success' to indicate success, or 'failure' to indicate failure
   */
  string kind = 1;
  /**
   * An icon for the start of the line (usually a single character emoji, but
   * could be any string)
   */
  string icon = 2;
  /**
   * The title to print (will not include newlines)
   */
  string title = 3;
  /**
   * Any additional text to print after the title (may include newlines)
   */
  string additionalText = 4;
}

message BeginDefinitionResponse { BoundaryResult result = 1; }
message RunExampleResponse { BoundaryResult result = 1; }
message RunRejectingExampleResponse { BoundaryResult result = 1; }
message StripMatchersResponse { BoundaryResult result = 1; }
message EndDefinitionResponse { BoundaryResult result = 1; }
message TriggerFunctionResponse { BoundaryResult result = 1; }

message DefinitionRequest {
  string id = 1;
  oneof kind {
    // From user calls
    BeginDefinitionRequest beginDefinition = 2;
    RunExampleRequest runExample = 3;
    RunRejectingExampleRequest runRejectingExample = 4;
    StripMatchersRequest stripMatchers = 5;
    EndDefinitionRequest endDefinition = 6;
    // Answering server questions
    StateHandlerResponse stateHandlerResponse = 7;
    LogPrinterResponse logPrinterResponse = 8;
    ResultPrinterResponse resultPrinterResponse = 9;
    TriggerFunctionResponse triggerFunctionResponse = 10;
  }
}

message DefinitionResponse {
  string id = 1;
  oneof kind {
    // These could come at any time
    RunStateHandlerRequest runStateHandler = 2;
    LogRequest logRequest = 3;
    PrintMatchErrorRequest printMatchErrorRequest = 4;
    PrintMessageErrorRequest printMessageErrorRequest = 5;
    PrintTestTitleRequest printTestTitleRequest = 6;
    TriggerFunctionRequest triggerFunctionRequest = 12;
    // These indicate the end of an RPC call
    BeginDefinitionResponse beginDefinitionResponse = 7;
    RunExampleResponse runExampleResponse = 8;
    RunRejectingExampleResponse runRejectingExampleResponse = 9;
    StripMatchersResponse stripMatchersResponse = 10;
    EndDefinitionResponse endDefinitionResponse = 11;
  }
}

service ContractCase {
  rpc ContractDefinition(stream DefinitionRequest)
      returns (stream DefinitionResponse) {}
}
