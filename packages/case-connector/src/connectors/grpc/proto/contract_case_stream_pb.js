// source: proto/contract_case_stream.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.BoundaryResult', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.BoundaryResult.ValueCase', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.ContractCaseConfig', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.DefinitionRequest', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.DefinitionRequest.KindCase', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.DefinitionResponse', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.DefinitionResponse.KindCase', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.LogPrinterResponse', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.LogRequest', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.ResultFailure', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.ResultSuccess', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.RunExampleRequest', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.RunExampleResponse', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.StateHandlerHandle', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.Stage', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.StateHandlerResponse', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.StripMatchersRequest', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.StripMatchersResponse', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest', null, global);
goog.exportSymbol('proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.repeatedFields_, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.ContractCaseConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.displayName = 'proto.io.contract_testing.contractcase.grpc.ContractCaseConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword.displayName = 'proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccess = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.ResultSuccess, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.ResultSuccess.displayName = 'proto.io.contract_testing.contractcase.grpc.ResultSuccess';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload.displayName = 'proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload.displayName = 'proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.ResultFailure = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.ResultFailure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.ResultFailure.displayName = 'proto.io.contract_testing.contractcase.grpc.ResultFailure';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.BoundaryResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.io.contract_testing.contractcase.grpc.BoundaryResult.oneofGroups_);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.BoundaryResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.BoundaryResult.displayName = 'proto.io.contract_testing.contractcase.grpc.BoundaryResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerHandle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.StateHandlerHandle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.displayName = 'proto.io.contract_testing.contractcase.grpc.StateHandlerHandle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle.displayName = 'proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest.repeatedFields_, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest.displayName = 'proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.RunExampleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.RunExampleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.RunExampleRequest.displayName = 'proto.io.contract_testing.contractcase.grpc.RunExampleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest.displayName = 'proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.StripMatchersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.StripMatchersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.StripMatchersRequest.displayName = 'proto.io.contract_testing.contractcase.grpc.StripMatchersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest.displayName = 'proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.StateHandlerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.StateHandlerResponse.displayName = 'proto.io.contract_testing.contractcase.grpc.StateHandlerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.LogPrinterResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.LogPrinterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.LogPrinterResponse.displayName = 'proto.io.contract_testing.contractcase.grpc.LogPrinterResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse.displayName = 'proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest.displayName = 'proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest.displayName = 'proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.LogRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.LogRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.LogRequest.displayName = 'proto.io.contract_testing.contractcase.grpc.LogRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.displayName = 'proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest.displayName = 'proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest.displayName = 'proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse.displayName = 'proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.RunExampleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.RunExampleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.RunExampleResponse.displayName = 'proto.io.contract_testing.contractcase.grpc.RunExampleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse.displayName = 'proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.StripMatchersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.StripMatchersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.StripMatchersResponse.displayName = 'proto.io.contract_testing.contractcase.grpc.StripMatchersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse.displayName = 'proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse.displayName = 'proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.io.contract_testing.contractcase.grpc.DefinitionRequest.oneofGroups_);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.DefinitionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.DefinitionRequest.displayName = 'proto.io.contract_testing.contractcase.grpc.DefinitionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.io.contract_testing.contractcase.grpc.DefinitionResponse.oneofGroups_);
};
goog.inherits(proto.io.contract_testing.contractcase.grpc.DefinitionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.contract_testing.contractcase.grpc.DefinitionResponse.displayName = 'proto.io.contract_testing.contractcase.grpc.DefinitionResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.repeatedFields_ = [12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    providerName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    consumerName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    logLevel: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contractDir: jspb.Message.getFieldWithDefault(msg, 4, ""),
    contractFilename: jspb.Message.getFieldWithDefault(msg, 5, ""),
    publish: jspb.Message.getFieldWithDefault(msg, 6, ""),
    brokerCiAccessToken: jspb.Message.getFieldWithDefault(msg, 7, ""),
    brokerBaseUrl: jspb.Message.getFieldWithDefault(msg, 8, ""),
    brokerBasicAuth: (f = msg.getBrokerBasicAuth()) && proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword.toObject(includeInstance, f),
    printResults: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    throwOnFail: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    stateHandlersList: jspb.Message.toObjectList(msg.getStateHandlersList(),
    proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.toObject, includeInstance),
    triggerAndTestsMap: (f = msg.getTriggerAndTestsMap()) ? f.toObject(includeInstance, proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle.toObject) : [],
    triggerAndTest: (f = msg.getTriggerAndTest()) && proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle.toObject(includeInstance, f),
    baseUrlUnderTest: jspb.Message.getFieldWithDefault(msg, 15, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.ContractCaseConfig;
  return proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProviderName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsumerName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogLevel(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractDir(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractFilename(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublish(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrokerCiAccessToken(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrokerBaseUrl(value);
      break;
    case 9:
      var value = new proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword.deserializeBinaryFromReader);
      msg.setBrokerBasicAuth(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPrintResults(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setThrowOnFail(value);
      break;
    case 12:
      var value = new proto.io.contract_testing.contractcase.grpc.StateHandlerHandle;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.deserializeBinaryFromReader);
      msg.addStateHandlers(value);
      break;
    case 13:
      var value = msg.getTriggerAndTestsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle.deserializeBinaryFromReader, "", new proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle());
         });
      break;
    case 14:
      var value = new proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle.deserializeBinaryFromReader);
      msg.setTriggerAndTest(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseUrlUnderTest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProviderName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConsumerName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLogLevel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContractDir();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContractFilename();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPublish();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBrokerCiAccessToken();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getBrokerBaseUrl();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getBrokerBasicAuth();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword.serializeBinaryToWriter
    );
  }
  f = message.getPrintResults();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getThrowOnFail();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getStateHandlersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.serializeBinaryToWriter
    );
  }
  f = message.getTriggerAndTestsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(13, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle.serializeBinaryToWriter);
  }
  f = message.getTriggerAndTest();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle.serializeBinaryToWriter
    );
  }
  f = message.getBaseUrlUnderTest();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword;
  return proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string username = 1;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword} returns this
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword} returns this
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string provider_name = 1;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.getProviderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig} returns this
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.setProviderName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string consumer_name = 2;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.getConsumerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig} returns this
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.setConsumerName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string log_level = 3;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.getLogLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig} returns this
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.setLogLevel = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string contract_dir = 4;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.getContractDir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig} returns this
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.setContractDir = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string contract_filename = 5;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.getContractFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig} returns this
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.setContractFilename = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string publish = 6;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.getPublish = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig} returns this
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.setPublish = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string broker_ci_access_token = 7;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.getBrokerCiAccessToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig} returns this
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.setBrokerCiAccessToken = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string broker_base_url = 8;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.getBrokerBaseUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig} returns this
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.setBrokerBaseUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional UsernamePassword broker_basic_auth = 9;
 * @return {?proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.getBrokerBasicAuth = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword, 9));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.UsernamePassword|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig} returns this
*/
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.setBrokerBasicAuth = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig} returns this
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.clearBrokerBasicAuth = function() {
  return this.setBrokerBasicAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.hasBrokerBasicAuth = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool print_results = 10;
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.getPrintResults = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig} returns this
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.setPrintResults = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool throw_on_fail = 11;
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.getThrowOnFail = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig} returns this
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.setThrowOnFail = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * repeated StateHandlerHandle state_handlers = 12;
 * @return {!Array<!proto.io.contract_testing.contractcase.grpc.StateHandlerHandle>}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.getStateHandlersList = function() {
  return /** @type{!Array<!proto.io.contract_testing.contractcase.grpc.StateHandlerHandle>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.contract_testing.contractcase.grpc.StateHandlerHandle, 12));
};


/**
 * @param {!Array<!proto.io.contract_testing.contractcase.grpc.StateHandlerHandle>} value
 * @return {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig} returns this
*/
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.setStateHandlersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.io.contract_testing.contractcase.grpc.StateHandlerHandle=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.contract_testing.contractcase.grpc.StateHandlerHandle}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.addStateHandlers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.io.contract_testing.contractcase.grpc.StateHandlerHandle, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig} returns this
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.clearStateHandlersList = function() {
  return this.setStateHandlersList([]);
};


/**
 * map<string, TriggerFunctionHandle> trigger_and_tests = 13;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle>}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.getTriggerAndTestsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle>} */ (
      jspb.Message.getMapField(this, 13, opt_noLazyCreate,
      proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig} returns this
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.clearTriggerAndTestsMap = function() {
  this.getTriggerAndTestsMap().clear();
  return this;};


/**
 * optional TriggerFunctionHandle trigger_and_test = 14;
 * @return {?proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.getTriggerAndTest = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle, 14));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig} returns this
*/
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.setTriggerAndTest = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig} returns this
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.clearTriggerAndTest = function() {
  return this.setTriggerAndTest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.hasTriggerAndTest = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string base_url_under_test = 15;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.getBaseUrlUnderTest = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.ContractCaseConfig} returns this
 */
proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.prototype.setBaseUrlUnderTest = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccess.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.ResultSuccess.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.ResultSuccess} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccess.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.ResultSuccess}
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccess.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.ResultSuccess;
  return proto.io.contract_testing.contractcase.grpc.ResultSuccess.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.ResultSuccess} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.ResultSuccess}
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccess.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccess.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.ResultSuccess.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.ResultSuccess} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccess.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    map: (f = msg.getMap()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload}
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload;
  return proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload}
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setMap(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMap();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Struct map = 1;
 * @return {?proto.google.protobuf.Struct}
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload.prototype.getMap = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 1));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload} returns this
*/
proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload.prototype.setMap = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload} returns this
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload.prototype.clearMap = function() {
  return this.setMap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload.prototype.hasMap = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: (f = msg.getPayload()) && google_protobuf_struct_pb.Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload}
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload;
  return proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload}
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Value payload = 1;
 * @return {?proto.google.protobuf.Value}
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload.prototype.getPayload = function() {
  return /** @type{?proto.google.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Value, 1));
};


/**
 * @param {?proto.google.protobuf.Value|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload} returns this
*/
proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload} returns this
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.ResultFailure.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.ResultFailure.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.ResultFailure} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.ResultFailure.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    location: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.ResultFailure}
 */
proto.io.contract_testing.contractcase.grpc.ResultFailure.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.ResultFailure;
  return proto.io.contract_testing.contractcase.grpc.ResultFailure.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.ResultFailure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.ResultFailure}
 */
proto.io.contract_testing.contractcase.grpc.ResultFailure.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.ResultFailure.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.ResultFailure.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.ResultFailure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.ResultFailure.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string kind = 1;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.ResultFailure.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.ResultFailure} returns this
 */
proto.io.contract_testing.contractcase.grpc.ResultFailure.prototype.setKind = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.ResultFailure.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.ResultFailure} returns this
 */
proto.io.contract_testing.contractcase.grpc.ResultFailure.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string location = 3;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.ResultFailure.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.ResultFailure} returns this
 */
proto.io.contract_testing.contractcase.grpc.ResultFailure.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.contract_testing.contractcase.grpc.BoundaryResult.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.io.contract_testing.contractcase.grpc.BoundaryResult.ValueCase = {
  VALUE_NOT_SET: 0,
  SUCCESS: 1,
  SUCCESS_HAS_MAP: 2,
  SUCCESS_HAS_ANY: 3,
  FAILURE: 4
};

/**
 * @return {proto.io.contract_testing.contractcase.grpc.BoundaryResult.ValueCase}
 */
proto.io.contract_testing.contractcase.grpc.BoundaryResult.prototype.getValueCase = function() {
  return /** @type {proto.io.contract_testing.contractcase.grpc.BoundaryResult.ValueCase} */(jspb.Message.computeOneofCase(this, proto.io.contract_testing.contractcase.grpc.BoundaryResult.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.BoundaryResult.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.BoundaryResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.BoundaryResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.BoundaryResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = msg.getSuccess()) && proto.io.contract_testing.contractcase.grpc.ResultSuccess.toObject(includeInstance, f),
    successHasMap: (f = msg.getSuccessHasMap()) && proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload.toObject(includeInstance, f),
    successHasAny: (f = msg.getSuccessHasAny()) && proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload.toObject(includeInstance, f),
    failure: (f = msg.getFailure()) && proto.io.contract_testing.contractcase.grpc.ResultFailure.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.BoundaryResult}
 */
proto.io.contract_testing.contractcase.grpc.BoundaryResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.BoundaryResult;
  return proto.io.contract_testing.contractcase.grpc.BoundaryResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.BoundaryResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.BoundaryResult}
 */
proto.io.contract_testing.contractcase.grpc.BoundaryResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.contract_testing.contractcase.grpc.ResultSuccess;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.ResultSuccess.deserializeBinaryFromReader);
      msg.setSuccess(value);
      break;
    case 2:
      var value = new proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload.deserializeBinaryFromReader);
      msg.setSuccessHasMap(value);
      break;
    case 3:
      var value = new proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload.deserializeBinaryFromReader);
      msg.setSuccessHasAny(value);
      break;
    case 4:
      var value = new proto.io.contract_testing.contractcase.grpc.ResultFailure;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.ResultFailure.deserializeBinaryFromReader);
      msg.setFailure(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.BoundaryResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.BoundaryResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.BoundaryResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.BoundaryResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.contract_testing.contractcase.grpc.ResultSuccess.serializeBinaryToWriter
    );
  }
  f = message.getSuccessHasMap();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload.serializeBinaryToWriter
    );
  }
  f = message.getSuccessHasAny();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload.serializeBinaryToWriter
    );
  }
  f = message.getFailure();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.contract_testing.contractcase.grpc.ResultFailure.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResultSuccess success = 1;
 * @return {?proto.io.contract_testing.contractcase.grpc.ResultSuccess}
 */
proto.io.contract_testing.contractcase.grpc.BoundaryResult.prototype.getSuccess = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.ResultSuccess} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.ResultSuccess, 1));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.ResultSuccess|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.BoundaryResult} returns this
*/
proto.io.contract_testing.contractcase.grpc.BoundaryResult.prototype.setSuccess = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.io.contract_testing.contractcase.grpc.BoundaryResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.BoundaryResult} returns this
 */
proto.io.contract_testing.contractcase.grpc.BoundaryResult.prototype.clearSuccess = function() {
  return this.setSuccess(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.BoundaryResult.prototype.hasSuccess = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ResultSuccessHasMapPayload success_has_map = 2;
 * @return {?proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload}
 */
proto.io.contract_testing.contractcase.grpc.BoundaryResult.prototype.getSuccessHasMap = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload, 2));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.ResultSuccessHasMapPayload|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.BoundaryResult} returns this
*/
proto.io.contract_testing.contractcase.grpc.BoundaryResult.prototype.setSuccessHasMap = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.io.contract_testing.contractcase.grpc.BoundaryResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.BoundaryResult} returns this
 */
proto.io.contract_testing.contractcase.grpc.BoundaryResult.prototype.clearSuccessHasMap = function() {
  return this.setSuccessHasMap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.BoundaryResult.prototype.hasSuccessHasMap = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ResultSuccessHasAnyPayload success_has_any = 3;
 * @return {?proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload}
 */
proto.io.contract_testing.contractcase.grpc.BoundaryResult.prototype.getSuccessHasAny = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload, 3));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.ResultSuccessHasAnyPayload|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.BoundaryResult} returns this
*/
proto.io.contract_testing.contractcase.grpc.BoundaryResult.prototype.setSuccessHasAny = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.io.contract_testing.contractcase.grpc.BoundaryResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.BoundaryResult} returns this
 */
proto.io.contract_testing.contractcase.grpc.BoundaryResult.prototype.clearSuccessHasAny = function() {
  return this.setSuccessHasAny(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.BoundaryResult.prototype.hasSuccessHasAny = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ResultFailure failure = 4;
 * @return {?proto.io.contract_testing.contractcase.grpc.ResultFailure}
 */
proto.io.contract_testing.contractcase.grpc.BoundaryResult.prototype.getFailure = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.ResultFailure} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.ResultFailure, 4));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.ResultFailure|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.BoundaryResult} returns this
*/
proto.io.contract_testing.contractcase.grpc.BoundaryResult.prototype.setFailure = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.io.contract_testing.contractcase.grpc.BoundaryResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.BoundaryResult} returns this
 */
proto.io.contract_testing.contractcase.grpc.BoundaryResult.prototype.clearFailure = function() {
  return this.setFailure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.BoundaryResult.prototype.hasFailure = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.StateHandlerHandle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.toObject = function(includeInstance, msg) {
  var f, obj = {
    handle: jspb.Message.getFieldWithDefault(msg, 1, ""),
    stage: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.StateHandlerHandle}
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.StateHandlerHandle;
  return proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.StateHandlerHandle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.StateHandlerHandle}
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHandle(value);
      break;
    case 2:
      var value = /** @type {!proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.Stage} */ (reader.readEnum());
      msg.setStage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.StateHandlerHandle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHandle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStage();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.Stage = {
  STAGE_SETUP_UNSPECIFIED: 0,
  STAGE_TEARDOWN: 1
};

/**
 * optional string handle = 1;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.prototype.getHandle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.StateHandlerHandle} returns this
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.prototype.setHandle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Stage stage = 2;
 * @return {!proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.Stage}
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.prototype.getStage = function() {
  return /** @type {!proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.Stage} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.Stage} value
 * @return {!proto.io.contract_testing.contractcase.grpc.StateHandlerHandle} returns this
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.prototype.setStage = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle.toObject = function(includeInstance, msg) {
  var f, obj = {
    handle: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle}
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle;
  return proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle}
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHandle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHandle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string handle = 1;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle.prototype.getHandle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle} returns this
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle.prototype.setHandle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: (f = msg.getConfig()) && proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.toObject(includeInstance, f),
    callerVersionsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest}
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest;
  return proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest}
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.contract_testing.contractcase.grpc.ContractCaseConfig;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addCallerVersions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.serializeBinaryToWriter
    );
  }
  f = message.getCallerVersionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional ContractCaseConfig config = 1;
 * @return {?proto.io.contract_testing.contractcase.grpc.ContractCaseConfig}
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest.prototype.getConfig = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.ContractCaseConfig} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.ContractCaseConfig, 1));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.ContractCaseConfig|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest} returns this
*/
proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string caller_versions = 4;
 * @return {!Array<string>}
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest.prototype.getCallerVersionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest.prototype.setCallerVersionsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest.prototype.addCallerVersions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest.prototype.clearCallerVersionsList = function() {
  return this.setCallerVersionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.RunExampleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.RunExampleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.RunExampleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.RunExampleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    exampleDefinition: (f = msg.getExampleDefinition()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    config: (f = msg.getConfig()) && proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.RunExampleRequest}
 */
proto.io.contract_testing.contractcase.grpc.RunExampleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.RunExampleRequest;
  return proto.io.contract_testing.contractcase.grpc.RunExampleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.RunExampleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.RunExampleRequest}
 */
proto.io.contract_testing.contractcase.grpc.RunExampleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExampleDefinition(value);
      break;
    case 3:
      var value = new proto.io.contract_testing.contractcase.grpc.ContractCaseConfig;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.RunExampleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.RunExampleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.RunExampleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.RunExampleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExampleDefinition();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Struct example_definition = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.io.contract_testing.contractcase.grpc.RunExampleRequest.prototype.getExampleDefinition = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.RunExampleRequest} returns this
*/
proto.io.contract_testing.contractcase.grpc.RunExampleRequest.prototype.setExampleDefinition = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.RunExampleRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.RunExampleRequest.prototype.clearExampleDefinition = function() {
  return this.setExampleDefinition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.RunExampleRequest.prototype.hasExampleDefinition = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ContractCaseConfig config = 3;
 * @return {?proto.io.contract_testing.contractcase.grpc.ContractCaseConfig}
 */
proto.io.contract_testing.contractcase.grpc.RunExampleRequest.prototype.getConfig = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.ContractCaseConfig} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.ContractCaseConfig, 3));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.ContractCaseConfig|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.RunExampleRequest} returns this
*/
proto.io.contract_testing.contractcase.grpc.RunExampleRequest.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.RunExampleRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.RunExampleRequest.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.RunExampleRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    exampleDefinition: (f = msg.getExampleDefinition()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    config: (f = msg.getConfig()) && proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest}
 */
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest;
  return proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest}
 */
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExampleDefinition(value);
      break;
    case 3:
      var value = new proto.io.contract_testing.contractcase.grpc.ContractCaseConfig;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExampleDefinition();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.contract_testing.contractcase.grpc.ContractCaseConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Struct example_definition = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest.prototype.getExampleDefinition = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest} returns this
*/
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest.prototype.setExampleDefinition = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest.prototype.clearExampleDefinition = function() {
  return this.setExampleDefinition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest.prototype.hasExampleDefinition = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ContractCaseConfig config = 3;
 * @return {?proto.io.contract_testing.contractcase.grpc.ContractCaseConfig}
 */
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest.prototype.getConfig = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.ContractCaseConfig} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.ContractCaseConfig, 3));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.ContractCaseConfig|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest} returns this
*/
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.StripMatchersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.StripMatchersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.StripMatchersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.StripMatchersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    matcherOrData: (f = msg.getMatcherOrData()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.StripMatchersRequest}
 */
proto.io.contract_testing.contractcase.grpc.StripMatchersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.StripMatchersRequest;
  return proto.io.contract_testing.contractcase.grpc.StripMatchersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.StripMatchersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.StripMatchersRequest}
 */
proto.io.contract_testing.contractcase.grpc.StripMatchersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setMatcherOrData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.StripMatchersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.StripMatchersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.StripMatchersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.StripMatchersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatcherOrData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Struct matcher_or_data = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.io.contract_testing.contractcase.grpc.StripMatchersRequest.prototype.getMatcherOrData = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.StripMatchersRequest} returns this
*/
proto.io.contract_testing.contractcase.grpc.StripMatchersRequest.prototype.setMatcherOrData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.StripMatchersRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.StripMatchersRequest.prototype.clearMatcherOrData = function() {
  return this.setMatcherOrData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.StripMatchersRequest.prototype.hasMatcherOrData = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest}
 */
proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest;
  return proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest}
 */
proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.StateHandlerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.StateHandlerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    stateHandlerHandle: (f = msg.getStateHandlerHandle()) && proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.toObject(includeInstance, f),
    result: (f = msg.getResult()) && proto.io.contract_testing.contractcase.grpc.BoundaryResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.StateHandlerResponse}
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.StateHandlerResponse;
  return proto.io.contract_testing.contractcase.grpc.StateHandlerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.StateHandlerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.StateHandlerResponse}
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.contract_testing.contractcase.grpc.StateHandlerHandle;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.deserializeBinaryFromReader);
      msg.setStateHandlerHandle(value);
      break;
    case 2:
      var value = new proto.io.contract_testing.contractcase.grpc.BoundaryResult;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.BoundaryResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.StateHandlerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.StateHandlerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStateHandlerHandle();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.serializeBinaryToWriter
    );
  }
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.contract_testing.contractcase.grpc.BoundaryResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional StateHandlerHandle state_handler_handle = 1;
 * @return {?proto.io.contract_testing.contractcase.grpc.StateHandlerHandle}
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerResponse.prototype.getStateHandlerHandle = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.StateHandlerHandle} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.StateHandlerHandle, 1));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.StateHandlerHandle|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.StateHandlerResponse} returns this
*/
proto.io.contract_testing.contractcase.grpc.StateHandlerResponse.prototype.setStateHandlerHandle = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.StateHandlerResponse} returns this
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerResponse.prototype.clearStateHandlerHandle = function() {
  return this.setStateHandlerHandle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerResponse.prototype.hasStateHandlerHandle = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BoundaryResult result = 2;
 * @return {?proto.io.contract_testing.contractcase.grpc.BoundaryResult}
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerResponse.prototype.getResult = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.BoundaryResult} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.BoundaryResult, 2));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.BoundaryResult|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.StateHandlerResponse} returns this
*/
proto.io.contract_testing.contractcase.grpc.StateHandlerResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.StateHandlerResponse} returns this
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.StateHandlerResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.LogPrinterResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.LogPrinterResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.LogPrinterResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.LogPrinterResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.io.contract_testing.contractcase.grpc.BoundaryResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.LogPrinterResponse}
 */
proto.io.contract_testing.contractcase.grpc.LogPrinterResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.LogPrinterResponse;
  return proto.io.contract_testing.contractcase.grpc.LogPrinterResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.LogPrinterResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.LogPrinterResponse}
 */
proto.io.contract_testing.contractcase.grpc.LogPrinterResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.contract_testing.contractcase.grpc.BoundaryResult;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.BoundaryResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.LogPrinterResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.LogPrinterResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.LogPrinterResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.LogPrinterResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.contract_testing.contractcase.grpc.BoundaryResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional BoundaryResult result = 1;
 * @return {?proto.io.contract_testing.contractcase.grpc.BoundaryResult}
 */
proto.io.contract_testing.contractcase.grpc.LogPrinterResponse.prototype.getResult = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.BoundaryResult} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.BoundaryResult, 1));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.BoundaryResult|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.LogPrinterResponse} returns this
*/
proto.io.contract_testing.contractcase.grpc.LogPrinterResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.LogPrinterResponse} returns this
 */
proto.io.contract_testing.contractcase.grpc.LogPrinterResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.LogPrinterResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.io.contract_testing.contractcase.grpc.BoundaryResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse}
 */
proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse;
  return proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse}
 */
proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.contract_testing.contractcase.grpc.BoundaryResult;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.BoundaryResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.contract_testing.contractcase.grpc.BoundaryResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional BoundaryResult result = 1;
 * @return {?proto.io.contract_testing.contractcase.grpc.BoundaryResult}
 */
proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse.prototype.getResult = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.BoundaryResult} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.BoundaryResult, 1));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.BoundaryResult|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse} returns this
*/
proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse} returns this
 */
proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    stateHandlerHandle: (f = msg.getStateHandlerHandle()) && proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest}
 */
proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest;
  return proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest}
 */
proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.contract_testing.contractcase.grpc.StateHandlerHandle;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.deserializeBinaryFromReader);
      msg.setStateHandlerHandle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStateHandlerHandle();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.contract_testing.contractcase.grpc.StateHandlerHandle.serializeBinaryToWriter
    );
  }
};


/**
 * optional StateHandlerHandle state_handler_handle = 1;
 * @return {?proto.io.contract_testing.contractcase.grpc.StateHandlerHandle}
 */
proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest.prototype.getStateHandlerHandle = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.StateHandlerHandle} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.StateHandlerHandle, 1));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.StateHandlerHandle|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest} returns this
*/
proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest.prototype.setStateHandlerHandle = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest.prototype.clearStateHandlerHandle = function() {
  return this.setStateHandlerHandle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest.prototype.hasStateHandlerHandle = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    triggerFunction: (f = msg.getTriggerFunction()) && proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle.toObject(includeInstance, f),
    config: (f = msg.getConfig()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest}
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest;
  return proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest}
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle.deserializeBinaryFromReader);
      msg.setTriggerFunction(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTriggerFunction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle.serializeBinaryToWriter
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional TriggerFunctionHandle trigger_function = 1;
 * @return {?proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle}
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest.prototype.getTriggerFunction = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle, 1));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.TriggerFunctionHandle|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest} returns this
*/
proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest.prototype.setTriggerFunction = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest.prototype.clearTriggerFunction = function() {
  return this.setTriggerFunction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest.prototype.hasTriggerFunction = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Struct config = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest.prototype.getConfig = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest} returns this
*/
proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.LogRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.LogRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.LogRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.LogRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    level: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 2, ""),
    version: jspb.Message.getFieldWithDefault(msg, 3, ""),
    typeString: jspb.Message.getFieldWithDefault(msg, 4, ""),
    location: jspb.Message.getFieldWithDefault(msg, 5, ""),
    message: jspb.Message.getFieldWithDefault(msg, 6, ""),
    additional: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.LogRequest}
 */
proto.io.contract_testing.contractcase.grpc.LogRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.LogRequest;
  return proto.io.contract_testing.contractcase.grpc.LogRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.LogRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.LogRequest}
 */
proto.io.contract_testing.contractcase.grpc.LogRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLevel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTypeString(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdditional(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.LogRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.LogRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.LogRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.LogRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLevel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTypeString();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAdditional();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string level = 1;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.LogRequest.prototype.getLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.LogRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.LogRequest.prototype.setLevel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string timestamp = 2;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.LogRequest.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.LogRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.LogRequest.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string version = 3;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.LogRequest.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.LogRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.LogRequest.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string type_string = 4;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.LogRequest.prototype.getTypeString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.LogRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.LogRequest.prototype.setTypeString = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string location = 5;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.LogRequest.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.LogRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.LogRequest.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string message = 6;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.LogRequest.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.LogRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.LogRequest.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string additional = 7;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.LogRequest.prototype.getAdditional = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.LogRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.LogRequest.prototype.setAdditional = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    location: jspb.Message.getFieldWithDefault(msg, 3, ""),
    locationTag: jspb.Message.getFieldWithDefault(msg, 4, ""),
    errorTypeTag: jspb.Message.getFieldWithDefault(msg, 5, ""),
    expected: jspb.Message.getFieldWithDefault(msg, 6, ""),
    actual: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest}
 */
proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest;
  return proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest}
 */
proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationTag(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorTypeTag(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpected(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setActual(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLocationTag();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getErrorTypeTag();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getExpected();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getActual();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string kind = 1;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.prototype.setKind = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string location = 3;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string location_tag = 4;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.prototype.getLocationTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.prototype.setLocationTag = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string error_type_tag = 5;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.prototype.getErrorTypeTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.prototype.setErrorTypeTag = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string expected = 6;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.prototype.getExpected = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.prototype.setExpected = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string actual = 7;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.prototype.getActual = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.prototype.setActual = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    location: jspb.Message.getFieldWithDefault(msg, 3, ""),
    locationTag: jspb.Message.getFieldWithDefault(msg, 4, ""),
    errorTypeTag: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest}
 */
proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest;
  return proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest}
 */
proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationTag(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorTypeTag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLocationTag();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getErrorTypeTag();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string kind = 1;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest.prototype.setKind = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string location = 3;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string location_tag = 4;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest.prototype.getLocationTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest.prototype.setLocationTag = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string error_type_tag = 5;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest.prototype.getErrorTypeTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest.prototype.setErrorTypeTag = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: jspb.Message.getFieldWithDefault(msg, 1, ""),
    icon: jspb.Message.getFieldWithDefault(msg, 2, ""),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    additionalText: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest}
 */
proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest;
  return proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest}
 */
proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdditionalText(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAdditionalText();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string kind = 1;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest.prototype.setKind = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string icon = 2;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string additional_text = 4;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest.prototype.getAdditionalText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest.prototype.setAdditionalText = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.io.contract_testing.contractcase.grpc.BoundaryResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse}
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse;
  return proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse}
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.contract_testing.contractcase.grpc.BoundaryResult;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.BoundaryResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.contract_testing.contractcase.grpc.BoundaryResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional BoundaryResult result = 1;
 * @return {?proto.io.contract_testing.contractcase.grpc.BoundaryResult}
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse.prototype.getResult = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.BoundaryResult} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.BoundaryResult, 1));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.BoundaryResult|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse} returns this
*/
proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse} returns this
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.RunExampleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.RunExampleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.RunExampleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.RunExampleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.io.contract_testing.contractcase.grpc.BoundaryResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.RunExampleResponse}
 */
proto.io.contract_testing.contractcase.grpc.RunExampleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.RunExampleResponse;
  return proto.io.contract_testing.contractcase.grpc.RunExampleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.RunExampleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.RunExampleResponse}
 */
proto.io.contract_testing.contractcase.grpc.RunExampleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.contract_testing.contractcase.grpc.BoundaryResult;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.BoundaryResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.RunExampleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.RunExampleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.RunExampleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.RunExampleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.contract_testing.contractcase.grpc.BoundaryResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional BoundaryResult result = 1;
 * @return {?proto.io.contract_testing.contractcase.grpc.BoundaryResult}
 */
proto.io.contract_testing.contractcase.grpc.RunExampleResponse.prototype.getResult = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.BoundaryResult} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.BoundaryResult, 1));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.BoundaryResult|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.RunExampleResponse} returns this
*/
proto.io.contract_testing.contractcase.grpc.RunExampleResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.RunExampleResponse} returns this
 */
proto.io.contract_testing.contractcase.grpc.RunExampleResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.RunExampleResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.io.contract_testing.contractcase.grpc.BoundaryResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse}
 */
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse;
  return proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse}
 */
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.contract_testing.contractcase.grpc.BoundaryResult;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.BoundaryResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.contract_testing.contractcase.grpc.BoundaryResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional BoundaryResult result = 1;
 * @return {?proto.io.contract_testing.contractcase.grpc.BoundaryResult}
 */
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse.prototype.getResult = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.BoundaryResult} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.BoundaryResult, 1));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.BoundaryResult|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse} returns this
*/
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse} returns this
 */
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.StripMatchersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.StripMatchersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.StripMatchersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.StripMatchersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.io.contract_testing.contractcase.grpc.BoundaryResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.StripMatchersResponse}
 */
proto.io.contract_testing.contractcase.grpc.StripMatchersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.StripMatchersResponse;
  return proto.io.contract_testing.contractcase.grpc.StripMatchersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.StripMatchersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.StripMatchersResponse}
 */
proto.io.contract_testing.contractcase.grpc.StripMatchersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.contract_testing.contractcase.grpc.BoundaryResult;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.BoundaryResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.StripMatchersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.StripMatchersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.StripMatchersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.StripMatchersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.contract_testing.contractcase.grpc.BoundaryResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional BoundaryResult result = 1;
 * @return {?proto.io.contract_testing.contractcase.grpc.BoundaryResult}
 */
proto.io.contract_testing.contractcase.grpc.StripMatchersResponse.prototype.getResult = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.BoundaryResult} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.BoundaryResult, 1));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.BoundaryResult|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.StripMatchersResponse} returns this
*/
proto.io.contract_testing.contractcase.grpc.StripMatchersResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.StripMatchersResponse} returns this
 */
proto.io.contract_testing.contractcase.grpc.StripMatchersResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.StripMatchersResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.io.contract_testing.contractcase.grpc.BoundaryResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse}
 */
proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse;
  return proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse}
 */
proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.contract_testing.contractcase.grpc.BoundaryResult;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.BoundaryResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.contract_testing.contractcase.grpc.BoundaryResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional BoundaryResult result = 1;
 * @return {?proto.io.contract_testing.contractcase.grpc.BoundaryResult}
 */
proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse.prototype.getResult = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.BoundaryResult} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.BoundaryResult, 1));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.BoundaryResult|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse} returns this
*/
proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse} returns this
 */
proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.io.contract_testing.contractcase.grpc.BoundaryResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse}
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse;
  return proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse}
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.contract_testing.contractcase.grpc.BoundaryResult;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.BoundaryResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.contract_testing.contractcase.grpc.BoundaryResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional BoundaryResult result = 1;
 * @return {?proto.io.contract_testing.contractcase.grpc.BoundaryResult}
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse.prototype.getResult = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.BoundaryResult} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.BoundaryResult, 1));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.BoundaryResult|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse} returns this
*/
proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse} returns this
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.oneofGroups_ = [[2,3,4,5,6,7,8,9,10]];

/**
 * @enum {number}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.KindCase = {
  KIND_NOT_SET: 0,
  BEGIN_DEFINITION: 2,
  RUN_EXAMPLE: 3,
  RUN_REJECTING_EXAMPLE: 4,
  STRIP_MATCHERS: 5,
  END_DEFINITION: 6,
  STATE_HANDLER_RESPONSE: 7,
  LOG_PRINTER_RESPONSE: 8,
  RESULT_PRINTER_RESPONSE: 9,
  TRIGGER_FUNCTION_RESPONSE: 10
};

/**
 * @return {proto.io.contract_testing.contractcase.grpc.DefinitionRequest.KindCase}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.getKindCase = function() {
  return /** @type {proto.io.contract_testing.contractcase.grpc.DefinitionRequest.KindCase} */(jspb.Message.computeOneofCase(this, proto.io.contract_testing.contractcase.grpc.DefinitionRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.DefinitionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.DefinitionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    beginDefinition: (f = msg.getBeginDefinition()) && proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest.toObject(includeInstance, f),
    runExample: (f = msg.getRunExample()) && proto.io.contract_testing.contractcase.grpc.RunExampleRequest.toObject(includeInstance, f),
    runRejectingExample: (f = msg.getRunRejectingExample()) && proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest.toObject(includeInstance, f),
    stripMatchers: (f = msg.getStripMatchers()) && proto.io.contract_testing.contractcase.grpc.StripMatchersRequest.toObject(includeInstance, f),
    endDefinition: (f = msg.getEndDefinition()) && proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest.toObject(includeInstance, f),
    stateHandlerResponse: (f = msg.getStateHandlerResponse()) && proto.io.contract_testing.contractcase.grpc.StateHandlerResponse.toObject(includeInstance, f),
    logPrinterResponse: (f = msg.getLogPrinterResponse()) && proto.io.contract_testing.contractcase.grpc.LogPrinterResponse.toObject(includeInstance, f),
    resultPrinterResponse: (f = msg.getResultPrinterResponse()) && proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse.toObject(includeInstance, f),
    triggerFunctionResponse: (f = msg.getTriggerFunctionResponse()) && proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionRequest}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.DefinitionRequest;
  return proto.io.contract_testing.contractcase.grpc.DefinitionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.DefinitionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionRequest}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest.deserializeBinaryFromReader);
      msg.setBeginDefinition(value);
      break;
    case 3:
      var value = new proto.io.contract_testing.contractcase.grpc.RunExampleRequest;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.RunExampleRequest.deserializeBinaryFromReader);
      msg.setRunExample(value);
      break;
    case 4:
      var value = new proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest.deserializeBinaryFromReader);
      msg.setRunRejectingExample(value);
      break;
    case 5:
      var value = new proto.io.contract_testing.contractcase.grpc.StripMatchersRequest;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.StripMatchersRequest.deserializeBinaryFromReader);
      msg.setStripMatchers(value);
      break;
    case 6:
      var value = new proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest.deserializeBinaryFromReader);
      msg.setEndDefinition(value);
      break;
    case 7:
      var value = new proto.io.contract_testing.contractcase.grpc.StateHandlerResponse;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.StateHandlerResponse.deserializeBinaryFromReader);
      msg.setStateHandlerResponse(value);
      break;
    case 8:
      var value = new proto.io.contract_testing.contractcase.grpc.LogPrinterResponse;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.LogPrinterResponse.deserializeBinaryFromReader);
      msg.setLogPrinterResponse(value);
      break;
    case 9:
      var value = new proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse.deserializeBinaryFromReader);
      msg.setResultPrinterResponse(value);
      break;
    case 10:
      var value = new proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse.deserializeBinaryFromReader);
      msg.setTriggerFunctionResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.DefinitionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.DefinitionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBeginDefinition();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest.serializeBinaryToWriter
    );
  }
  f = message.getRunExample();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.contract_testing.contractcase.grpc.RunExampleRequest.serializeBinaryToWriter
    );
  }
  f = message.getRunRejectingExample();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest.serializeBinaryToWriter
    );
  }
  f = message.getStripMatchers();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.io.contract_testing.contractcase.grpc.StripMatchersRequest.serializeBinaryToWriter
    );
  }
  f = message.getEndDefinition();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest.serializeBinaryToWriter
    );
  }
  f = message.getStateHandlerResponse();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.io.contract_testing.contractcase.grpc.StateHandlerResponse.serializeBinaryToWriter
    );
  }
  f = message.getLogPrinterResponse();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.io.contract_testing.contractcase.grpc.LogPrinterResponse.serializeBinaryToWriter
    );
  }
  f = message.getResultPrinterResponse();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse.serializeBinaryToWriter
    );
  }
  f = message.getTriggerFunctionResponse();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional BeginDefinitionRequest begin_definition = 2;
 * @return {?proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.getBeginDefinition = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest, 2));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.BeginDefinitionRequest|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionRequest} returns this
*/
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.setBeginDefinition = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.io.contract_testing.contractcase.grpc.DefinitionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.clearBeginDefinition = function() {
  return this.setBeginDefinition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.hasBeginDefinition = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RunExampleRequest run_example = 3;
 * @return {?proto.io.contract_testing.contractcase.grpc.RunExampleRequest}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.getRunExample = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.RunExampleRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.RunExampleRequest, 3));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.RunExampleRequest|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionRequest} returns this
*/
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.setRunExample = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.io.contract_testing.contractcase.grpc.DefinitionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.clearRunExample = function() {
  return this.setRunExample(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.hasRunExample = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RunRejectingExampleRequest run_rejecting_example = 4;
 * @return {?proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.getRunRejectingExample = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest, 4));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.RunRejectingExampleRequest|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionRequest} returns this
*/
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.setRunRejectingExample = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.io.contract_testing.contractcase.grpc.DefinitionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.clearRunRejectingExample = function() {
  return this.setRunRejectingExample(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.hasRunRejectingExample = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional StripMatchersRequest strip_matchers = 5;
 * @return {?proto.io.contract_testing.contractcase.grpc.StripMatchersRequest}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.getStripMatchers = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.StripMatchersRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.StripMatchersRequest, 5));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.StripMatchersRequest|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionRequest} returns this
*/
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.setStripMatchers = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.io.contract_testing.contractcase.grpc.DefinitionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.clearStripMatchers = function() {
  return this.setStripMatchers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.hasStripMatchers = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional EndDefinitionRequest end_definition = 6;
 * @return {?proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.getEndDefinition = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest, 6));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.EndDefinitionRequest|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionRequest} returns this
*/
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.setEndDefinition = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.io.contract_testing.contractcase.grpc.DefinitionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.clearEndDefinition = function() {
  return this.setEndDefinition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.hasEndDefinition = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional StateHandlerResponse state_handler_response = 7;
 * @return {?proto.io.contract_testing.contractcase.grpc.StateHandlerResponse}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.getStateHandlerResponse = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.StateHandlerResponse} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.StateHandlerResponse, 7));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.StateHandlerResponse|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionRequest} returns this
*/
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.setStateHandlerResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.io.contract_testing.contractcase.grpc.DefinitionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.clearStateHandlerResponse = function() {
  return this.setStateHandlerResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.hasStateHandlerResponse = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional LogPrinterResponse log_printer_response = 8;
 * @return {?proto.io.contract_testing.contractcase.grpc.LogPrinterResponse}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.getLogPrinterResponse = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.LogPrinterResponse} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.LogPrinterResponse, 8));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.LogPrinterResponse|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionRequest} returns this
*/
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.setLogPrinterResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.io.contract_testing.contractcase.grpc.DefinitionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.clearLogPrinterResponse = function() {
  return this.setLogPrinterResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.hasLogPrinterResponse = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ResultPrinterResponse result_printer_response = 9;
 * @return {?proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.getResultPrinterResponse = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse, 9));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.ResultPrinterResponse|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionRequest} returns this
*/
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.setResultPrinterResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.io.contract_testing.contractcase.grpc.DefinitionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.clearResultPrinterResponse = function() {
  return this.setResultPrinterResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.hasResultPrinterResponse = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional TriggerFunctionResponse trigger_function_response = 10;
 * @return {?proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.getTriggerFunctionResponse = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse, 10));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.TriggerFunctionResponse|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionRequest} returns this
*/
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.setTriggerFunctionResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.io.contract_testing.contractcase.grpc.DefinitionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionRequest} returns this
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.clearTriggerFunctionResponse = function() {
  return this.setTriggerFunctionResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionRequest.prototype.hasTriggerFunctionResponse = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.oneofGroups_ = [[2,3,4,5,6,12,7,8,9,10,11]];

/**
 * @enum {number}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.KindCase = {
  KIND_NOT_SET: 0,
  RUN_STATE_HANDLER: 2,
  LOG_REQUEST: 3,
  PRINT_MATCH_ERROR_REQUEST: 4,
  PRINT_MESSAGE_ERROR_REQUEST: 5,
  PRINT_TEST_TITLE_REQUEST: 6,
  TRIGGER_FUNCTION_REQUEST: 12,
  BEGIN_DEFINITION_RESPONSE: 7,
  RUN_EXAMPLE_RESPONSE: 8,
  RUN_REJECTING_EXAMPLE_RESPONSE: 9,
  STRIP_MATCHERS_RESPONSE: 10,
  END_DEFINITION_RESPONSE: 11
};

/**
 * @return {proto.io.contract_testing.contractcase.grpc.DefinitionResponse.KindCase}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.getKindCase = function() {
  return /** @type {proto.io.contract_testing.contractcase.grpc.DefinitionResponse.KindCase} */(jspb.Message.computeOneofCase(this, proto.io.contract_testing.contractcase.grpc.DefinitionResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.contract_testing.contractcase.grpc.DefinitionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    runStateHandler: (f = msg.getRunStateHandler()) && proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest.toObject(includeInstance, f),
    logRequest: (f = msg.getLogRequest()) && proto.io.contract_testing.contractcase.grpc.LogRequest.toObject(includeInstance, f),
    printMatchErrorRequest: (f = msg.getPrintMatchErrorRequest()) && proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.toObject(includeInstance, f),
    printMessageErrorRequest: (f = msg.getPrintMessageErrorRequest()) && proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest.toObject(includeInstance, f),
    printTestTitleRequest: (f = msg.getPrintTestTitleRequest()) && proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest.toObject(includeInstance, f),
    triggerFunctionRequest: (f = msg.getTriggerFunctionRequest()) && proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest.toObject(includeInstance, f),
    beginDefinitionResponse: (f = msg.getBeginDefinitionResponse()) && proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse.toObject(includeInstance, f),
    runExampleResponse: (f = msg.getRunExampleResponse()) && proto.io.contract_testing.contractcase.grpc.RunExampleResponse.toObject(includeInstance, f),
    runRejectingExampleResponse: (f = msg.getRunRejectingExampleResponse()) && proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse.toObject(includeInstance, f),
    stripMatchersResponse: (f = msg.getStripMatchersResponse()) && proto.io.contract_testing.contractcase.grpc.StripMatchersResponse.toObject(includeInstance, f),
    endDefinitionResponse: (f = msg.getEndDefinitionResponse()) && proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.contract_testing.contractcase.grpc.DefinitionResponse;
  return proto.io.contract_testing.contractcase.grpc.DefinitionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest.deserializeBinaryFromReader);
      msg.setRunStateHandler(value);
      break;
    case 3:
      var value = new proto.io.contract_testing.contractcase.grpc.LogRequest;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.LogRequest.deserializeBinaryFromReader);
      msg.setLogRequest(value);
      break;
    case 4:
      var value = new proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.deserializeBinaryFromReader);
      msg.setPrintMatchErrorRequest(value);
      break;
    case 5:
      var value = new proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest.deserializeBinaryFromReader);
      msg.setPrintMessageErrorRequest(value);
      break;
    case 6:
      var value = new proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest.deserializeBinaryFromReader);
      msg.setPrintTestTitleRequest(value);
      break;
    case 12:
      var value = new proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest.deserializeBinaryFromReader);
      msg.setTriggerFunctionRequest(value);
      break;
    case 7:
      var value = new proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse.deserializeBinaryFromReader);
      msg.setBeginDefinitionResponse(value);
      break;
    case 8:
      var value = new proto.io.contract_testing.contractcase.grpc.RunExampleResponse;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.RunExampleResponse.deserializeBinaryFromReader);
      msg.setRunExampleResponse(value);
      break;
    case 9:
      var value = new proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse.deserializeBinaryFromReader);
      msg.setRunRejectingExampleResponse(value);
      break;
    case 10:
      var value = new proto.io.contract_testing.contractcase.grpc.StripMatchersResponse;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.StripMatchersResponse.deserializeBinaryFromReader);
      msg.setStripMatchersResponse(value);
      break;
    case 11:
      var value = new proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse;
      reader.readMessage(value,proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse.deserializeBinaryFromReader);
      msg.setEndDefinitionResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.contract_testing.contractcase.grpc.DefinitionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRunStateHandler();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest.serializeBinaryToWriter
    );
  }
  f = message.getLogRequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.contract_testing.contractcase.grpc.LogRequest.serializeBinaryToWriter
    );
  }
  f = message.getPrintMatchErrorRequest();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest.serializeBinaryToWriter
    );
  }
  f = message.getPrintMessageErrorRequest();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest.serializeBinaryToWriter
    );
  }
  f = message.getPrintTestTitleRequest();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest.serializeBinaryToWriter
    );
  }
  f = message.getTriggerFunctionRequest();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest.serializeBinaryToWriter
    );
  }
  f = message.getBeginDefinitionResponse();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse.serializeBinaryToWriter
    );
  }
  f = message.getRunExampleResponse();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.io.contract_testing.contractcase.grpc.RunExampleResponse.serializeBinaryToWriter
    );
  }
  f = message.getRunRejectingExampleResponse();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse.serializeBinaryToWriter
    );
  }
  f = message.getStripMatchersResponse();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.io.contract_testing.contractcase.grpc.StripMatchersResponse.serializeBinaryToWriter
    );
  }
  f = message.getEndDefinitionResponse();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} returns this
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional RunStateHandlerRequest run_state_handler = 2;
 * @return {?proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.getRunStateHandler = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest, 2));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.RunStateHandlerRequest|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} returns this
*/
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.setRunStateHandler = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.io.contract_testing.contractcase.grpc.DefinitionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} returns this
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.clearRunStateHandler = function() {
  return this.setRunStateHandler(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.hasRunStateHandler = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LogRequest log_request = 3;
 * @return {?proto.io.contract_testing.contractcase.grpc.LogRequest}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.getLogRequest = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.LogRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.LogRequest, 3));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.LogRequest|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} returns this
*/
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.setLogRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.io.contract_testing.contractcase.grpc.DefinitionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} returns this
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.clearLogRequest = function() {
  return this.setLogRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.hasLogRequest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PrintMatchErrorRequest print_match_error_request = 4;
 * @return {?proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.getPrintMatchErrorRequest = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest, 4));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.PrintMatchErrorRequest|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} returns this
*/
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.setPrintMatchErrorRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.io.contract_testing.contractcase.grpc.DefinitionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} returns this
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.clearPrintMatchErrorRequest = function() {
  return this.setPrintMatchErrorRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.hasPrintMatchErrorRequest = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional PrintMessageErrorRequest print_message_error_request = 5;
 * @return {?proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.getPrintMessageErrorRequest = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest, 5));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.PrintMessageErrorRequest|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} returns this
*/
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.setPrintMessageErrorRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.io.contract_testing.contractcase.grpc.DefinitionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} returns this
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.clearPrintMessageErrorRequest = function() {
  return this.setPrintMessageErrorRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.hasPrintMessageErrorRequest = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional PrintTestTitleRequest print_test_title_request = 6;
 * @return {?proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.getPrintTestTitleRequest = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest, 6));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.PrintTestTitleRequest|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} returns this
*/
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.setPrintTestTitleRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.io.contract_testing.contractcase.grpc.DefinitionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} returns this
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.clearPrintTestTitleRequest = function() {
  return this.setPrintTestTitleRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.hasPrintTestTitleRequest = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional TriggerFunctionRequest trigger_function_request = 12;
 * @return {?proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.getTriggerFunctionRequest = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest, 12));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.TriggerFunctionRequest|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} returns this
*/
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.setTriggerFunctionRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.io.contract_testing.contractcase.grpc.DefinitionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} returns this
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.clearTriggerFunctionRequest = function() {
  return this.setTriggerFunctionRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.hasTriggerFunctionRequest = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional BeginDefinitionResponse begin_definition_response = 7;
 * @return {?proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.getBeginDefinitionResponse = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse, 7));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.BeginDefinitionResponse|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} returns this
*/
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.setBeginDefinitionResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.io.contract_testing.contractcase.grpc.DefinitionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} returns this
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.clearBeginDefinitionResponse = function() {
  return this.setBeginDefinitionResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.hasBeginDefinitionResponse = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional RunExampleResponse run_example_response = 8;
 * @return {?proto.io.contract_testing.contractcase.grpc.RunExampleResponse}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.getRunExampleResponse = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.RunExampleResponse} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.RunExampleResponse, 8));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.RunExampleResponse|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} returns this
*/
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.setRunExampleResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.io.contract_testing.contractcase.grpc.DefinitionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} returns this
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.clearRunExampleResponse = function() {
  return this.setRunExampleResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.hasRunExampleResponse = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional RunRejectingExampleResponse run_rejecting_example_response = 9;
 * @return {?proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.getRunRejectingExampleResponse = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse, 9));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.RunRejectingExampleResponse|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} returns this
*/
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.setRunRejectingExampleResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.io.contract_testing.contractcase.grpc.DefinitionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} returns this
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.clearRunRejectingExampleResponse = function() {
  return this.setRunRejectingExampleResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.hasRunRejectingExampleResponse = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional StripMatchersResponse strip_matchers_response = 10;
 * @return {?proto.io.contract_testing.contractcase.grpc.StripMatchersResponse}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.getStripMatchersResponse = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.StripMatchersResponse} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.StripMatchersResponse, 10));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.StripMatchersResponse|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} returns this
*/
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.setStripMatchersResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.io.contract_testing.contractcase.grpc.DefinitionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} returns this
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.clearStripMatchersResponse = function() {
  return this.setStripMatchersResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.hasStripMatchersResponse = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional EndDefinitionResponse end_definition_response = 11;
 * @return {?proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.getEndDefinitionResponse = function() {
  return /** @type{?proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse} */ (
    jspb.Message.getWrapperField(this, proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse, 11));
};


/**
 * @param {?proto.io.contract_testing.contractcase.grpc.EndDefinitionResponse|undefined} value
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} returns this
*/
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.setEndDefinitionResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.io.contract_testing.contractcase.grpc.DefinitionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.contract_testing.contractcase.grpc.DefinitionResponse} returns this
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.clearEndDefinitionResponse = function() {
  return this.setEndDefinitionResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.contract_testing.contractcase.grpc.DefinitionResponse.prototype.hasEndDefinitionResponse = function() {
  return jspb.Message.getField(this, 11) != null;
};


goog.object.extend(exports, proto.io.contract_testing.contractcase.grpc);
