// source: proto/contract-case-stream.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.contractcase.BeginDefinitionRequest', null, global);
goog.exportSymbol('proto.contractcase.BeginDefinitionResponse', null, global);
goog.exportSymbol('proto.contractcase.BoundaryResult', null, global);
goog.exportSymbol('proto.contractcase.BoundaryResult.ValueCase', null, global);
goog.exportSymbol('proto.contractcase.ContractCaseConfig', null, global);
goog.exportSymbol('proto.contractcase.ContractCaseConfig.UsernamePassword', null, global);
goog.exportSymbol('proto.contractcase.DefinitionHandle', null, global);
goog.exportSymbol('proto.contractcase.DefinitionRequest', null, global);
goog.exportSymbol('proto.contractcase.DefinitionRequest.KindCase', null, global);
goog.exportSymbol('proto.contractcase.DefinitionResponse', null, global);
goog.exportSymbol('proto.contractcase.DefinitionResponse.KindCase', null, global);
goog.exportSymbol('proto.contractcase.EndDefinitionRequest', null, global);
goog.exportSymbol('proto.contractcase.EndDefinitionResponse', null, global);
goog.exportSymbol('proto.contractcase.LogPrinterResponse', null, global);
goog.exportSymbol('proto.contractcase.LogRequest', null, global);
goog.exportSymbol('proto.contractcase.PrintMatchErrorRequest', null, global);
goog.exportSymbol('proto.contractcase.PrintMessageErrorRequest', null, global);
goog.exportSymbol('proto.contractcase.PrintTestTitleRequest', null, global);
goog.exportSymbol('proto.contractcase.ResultFailure', null, global);
goog.exportSymbol('proto.contractcase.ResultPrinterResponse', null, global);
goog.exportSymbol('proto.contractcase.ResultSuccess', null, global);
goog.exportSymbol('proto.contractcase.ResultSuccessHasAnyPayload', null, global);
goog.exportSymbol('proto.contractcase.ResultSuccessHasMapPayload', null, global);
goog.exportSymbol('proto.contractcase.RunExampleRequest', null, global);
goog.exportSymbol('proto.contractcase.RunExampleResponse', null, global);
goog.exportSymbol('proto.contractcase.RunRejectingExampleRequest', null, global);
goog.exportSymbol('proto.contractcase.RunRejectingExampleResponse', null, global);
goog.exportSymbol('proto.contractcase.RunStateHandlerRequest', null, global);
goog.exportSymbol('proto.contractcase.StateHandlerHandle', null, global);
goog.exportSymbol('proto.contractcase.StateHandlerHandle.Stage', null, global);
goog.exportSymbol('proto.contractcase.StateHandlerResponse', null, global);
goog.exportSymbol('proto.contractcase.StripMatchersRequest', null, global);
goog.exportSymbol('proto.contractcase.StripMatchersResponse', null, global);
goog.exportSymbol('proto.contractcase.TriggerFunctionHandle', null, global);
goog.exportSymbol('proto.contractcase.TriggerFunctionRequest', null, global);
goog.exportSymbol('proto.contractcase.TriggerFunctionResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.ContractCaseConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.contractcase.ContractCaseConfig.repeatedFields_, null);
};
goog.inherits(proto.contractcase.ContractCaseConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.ContractCaseConfig.displayName = 'proto.contractcase.ContractCaseConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.ContractCaseConfig.UsernamePassword = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.ContractCaseConfig.UsernamePassword, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.ContractCaseConfig.UsernamePassword.displayName = 'proto.contractcase.ContractCaseConfig.UsernamePassword';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.DefinitionHandle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.DefinitionHandle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.DefinitionHandle.displayName = 'proto.contractcase.DefinitionHandle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.ResultSuccess = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.ResultSuccess, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.ResultSuccess.displayName = 'proto.contractcase.ResultSuccess';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.ResultSuccessHasMapPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.ResultSuccessHasMapPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.ResultSuccessHasMapPayload.displayName = 'proto.contractcase.ResultSuccessHasMapPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.ResultSuccessHasAnyPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.ResultSuccessHasAnyPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.ResultSuccessHasAnyPayload.displayName = 'proto.contractcase.ResultSuccessHasAnyPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.ResultFailure = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.ResultFailure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.ResultFailure.displayName = 'proto.contractcase.ResultFailure';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.BoundaryResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.contractcase.BoundaryResult.oneofGroups_);
};
goog.inherits(proto.contractcase.BoundaryResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.BoundaryResult.displayName = 'proto.contractcase.BoundaryResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.StateHandlerHandle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.StateHandlerHandle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.StateHandlerHandle.displayName = 'proto.contractcase.StateHandlerHandle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.TriggerFunctionHandle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.TriggerFunctionHandle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.TriggerFunctionHandle.displayName = 'proto.contractcase.TriggerFunctionHandle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.BeginDefinitionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.contractcase.BeginDefinitionRequest.repeatedFields_, null);
};
goog.inherits(proto.contractcase.BeginDefinitionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.BeginDefinitionRequest.displayName = 'proto.contractcase.BeginDefinitionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.RunExampleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.RunExampleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.RunExampleRequest.displayName = 'proto.contractcase.RunExampleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.RunRejectingExampleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.RunRejectingExampleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.RunRejectingExampleRequest.displayName = 'proto.contractcase.RunRejectingExampleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.StripMatchersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.StripMatchersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.StripMatchersRequest.displayName = 'proto.contractcase.StripMatchersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.EndDefinitionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.EndDefinitionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.EndDefinitionRequest.displayName = 'proto.contractcase.EndDefinitionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.StateHandlerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.StateHandlerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.StateHandlerResponse.displayName = 'proto.contractcase.StateHandlerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.LogPrinterResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.LogPrinterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.LogPrinterResponse.displayName = 'proto.contractcase.LogPrinterResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.ResultPrinterResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.ResultPrinterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.ResultPrinterResponse.displayName = 'proto.contractcase.ResultPrinterResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.RunStateHandlerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.RunStateHandlerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.RunStateHandlerRequest.displayName = 'proto.contractcase.RunStateHandlerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.TriggerFunctionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.TriggerFunctionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.TriggerFunctionRequest.displayName = 'proto.contractcase.TriggerFunctionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.LogRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.LogRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.LogRequest.displayName = 'proto.contractcase.LogRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.PrintMatchErrorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.PrintMatchErrorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.PrintMatchErrorRequest.displayName = 'proto.contractcase.PrintMatchErrorRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.PrintMessageErrorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.PrintMessageErrorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.PrintMessageErrorRequest.displayName = 'proto.contractcase.PrintMessageErrorRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.PrintTestTitleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.PrintTestTitleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.PrintTestTitleRequest.displayName = 'proto.contractcase.PrintTestTitleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.BeginDefinitionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.BeginDefinitionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.BeginDefinitionResponse.displayName = 'proto.contractcase.BeginDefinitionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.RunExampleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.RunExampleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.RunExampleResponse.displayName = 'proto.contractcase.RunExampleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.RunRejectingExampleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.RunRejectingExampleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.RunRejectingExampleResponse.displayName = 'proto.contractcase.RunRejectingExampleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.StripMatchersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.StripMatchersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.StripMatchersResponse.displayName = 'proto.contractcase.StripMatchersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.EndDefinitionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.EndDefinitionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.EndDefinitionResponse.displayName = 'proto.contractcase.EndDefinitionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.TriggerFunctionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contractcase.TriggerFunctionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.TriggerFunctionResponse.displayName = 'proto.contractcase.TriggerFunctionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.DefinitionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.contractcase.DefinitionRequest.oneofGroups_);
};
goog.inherits(proto.contractcase.DefinitionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.DefinitionRequest.displayName = 'proto.contractcase.DefinitionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contractcase.DefinitionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.contractcase.DefinitionResponse.oneofGroups_);
};
goog.inherits(proto.contractcase.DefinitionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contractcase.DefinitionResponse.displayName = 'proto.contractcase.DefinitionResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.contractcase.ContractCaseConfig.repeatedFields_ = [12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.ContractCaseConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.ContractCaseConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.ContractCaseConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.ContractCaseConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    providername: jspb.Message.getFieldWithDefault(msg, 1, ""),
    consumername: jspb.Message.getFieldWithDefault(msg, 2, ""),
    loglevel: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contractdir: jspb.Message.getFieldWithDefault(msg, 4, ""),
    contractfilename: jspb.Message.getFieldWithDefault(msg, 5, ""),
    publish: jspb.Message.getFieldWithDefault(msg, 6, ""),
    brokerciaccesstoken: jspb.Message.getFieldWithDefault(msg, 7, ""),
    brokerbaseurl: jspb.Message.getFieldWithDefault(msg, 8, ""),
    brokerbasicauth: (f = msg.getBrokerbasicauth()) && proto.contractcase.ContractCaseConfig.UsernamePassword.toObject(includeInstance, f),
    printresults: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    throwonfail: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    statehandlersList: jspb.Message.toObjectList(msg.getStatehandlersList(),
    proto.contractcase.StateHandlerHandle.toObject, includeInstance),
    triggerfunctionMap: (f = msg.getTriggerfunctionMap()) ? f.toObject(includeInstance, proto.contractcase.TriggerFunctionHandle.toObject) : [],
    triggerandtest: (f = msg.getTriggerandtest()) && proto.contractcase.TriggerFunctionHandle.toObject(includeInstance, f),
    baseurlundertest: jspb.Message.getFieldWithDefault(msg, 15, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.ContractCaseConfig}
 */
proto.contractcase.ContractCaseConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.ContractCaseConfig;
  return proto.contractcase.ContractCaseConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.ContractCaseConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.ContractCaseConfig}
 */
proto.contractcase.ContractCaseConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvidername(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsumername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoglevel(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractdir(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractfilename(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublish(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrokerciaccesstoken(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrokerbaseurl(value);
      break;
    case 9:
      var value = new proto.contractcase.ContractCaseConfig.UsernamePassword;
      reader.readMessage(value,proto.contractcase.ContractCaseConfig.UsernamePassword.deserializeBinaryFromReader);
      msg.setBrokerbasicauth(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPrintresults(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setThrowonfail(value);
      break;
    case 12:
      var value = new proto.contractcase.StateHandlerHandle;
      reader.readMessage(value,proto.contractcase.StateHandlerHandle.deserializeBinaryFromReader);
      msg.addStatehandlers(value);
      break;
    case 13:
      var value = msg.getTriggerfunctionMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.contractcase.TriggerFunctionHandle.deserializeBinaryFromReader, "", new proto.contractcase.TriggerFunctionHandle());
         });
      break;
    case 14:
      var value = new proto.contractcase.TriggerFunctionHandle;
      reader.readMessage(value,proto.contractcase.TriggerFunctionHandle.deserializeBinaryFromReader);
      msg.setTriggerandtest(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseurlundertest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.ContractCaseConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.ContractCaseConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.ContractCaseConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.ContractCaseConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvidername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConsumername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLoglevel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContractdir();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContractfilename();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPublish();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBrokerciaccesstoken();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getBrokerbaseurl();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getBrokerbasicauth();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.contractcase.ContractCaseConfig.UsernamePassword.serializeBinaryToWriter
    );
  }
  f = message.getPrintresults();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getThrowonfail();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getStatehandlersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.contractcase.StateHandlerHandle.serializeBinaryToWriter
    );
  }
  f = message.getTriggerfunctionMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(13, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.contractcase.TriggerFunctionHandle.serializeBinaryToWriter);
  }
  f = message.getTriggerandtest();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.contractcase.TriggerFunctionHandle.serializeBinaryToWriter
    );
  }
  f = message.getBaseurlundertest();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.ContractCaseConfig.UsernamePassword.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.ContractCaseConfig.UsernamePassword.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.ContractCaseConfig.UsernamePassword} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.ContractCaseConfig.UsernamePassword.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.ContractCaseConfig.UsernamePassword}
 */
proto.contractcase.ContractCaseConfig.UsernamePassword.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.ContractCaseConfig.UsernamePassword;
  return proto.contractcase.ContractCaseConfig.UsernamePassword.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.ContractCaseConfig.UsernamePassword} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.ContractCaseConfig.UsernamePassword}
 */
proto.contractcase.ContractCaseConfig.UsernamePassword.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.ContractCaseConfig.UsernamePassword.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.ContractCaseConfig.UsernamePassword.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.ContractCaseConfig.UsernamePassword} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.ContractCaseConfig.UsernamePassword.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string username = 1;
 * @return {string}
 */
proto.contractcase.ContractCaseConfig.UsernamePassword.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.ContractCaseConfig.UsernamePassword} returns this
 */
proto.contractcase.ContractCaseConfig.UsernamePassword.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.contractcase.ContractCaseConfig.UsernamePassword.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.ContractCaseConfig.UsernamePassword} returns this
 */
proto.contractcase.ContractCaseConfig.UsernamePassword.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string providerName = 1;
 * @return {string}
 */
proto.contractcase.ContractCaseConfig.prototype.getProvidername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.ContractCaseConfig} returns this
 */
proto.contractcase.ContractCaseConfig.prototype.setProvidername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string consumerName = 2;
 * @return {string}
 */
proto.contractcase.ContractCaseConfig.prototype.getConsumername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.ContractCaseConfig} returns this
 */
proto.contractcase.ContractCaseConfig.prototype.setConsumername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string logLevel = 3;
 * @return {string}
 */
proto.contractcase.ContractCaseConfig.prototype.getLoglevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.ContractCaseConfig} returns this
 */
proto.contractcase.ContractCaseConfig.prototype.setLoglevel = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string contractDir = 4;
 * @return {string}
 */
proto.contractcase.ContractCaseConfig.prototype.getContractdir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.ContractCaseConfig} returns this
 */
proto.contractcase.ContractCaseConfig.prototype.setContractdir = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string contractFilename = 5;
 * @return {string}
 */
proto.contractcase.ContractCaseConfig.prototype.getContractfilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.ContractCaseConfig} returns this
 */
proto.contractcase.ContractCaseConfig.prototype.setContractfilename = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string publish = 6;
 * @return {string}
 */
proto.contractcase.ContractCaseConfig.prototype.getPublish = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.ContractCaseConfig} returns this
 */
proto.contractcase.ContractCaseConfig.prototype.setPublish = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string brokerCiAccessToken = 7;
 * @return {string}
 */
proto.contractcase.ContractCaseConfig.prototype.getBrokerciaccesstoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.ContractCaseConfig} returns this
 */
proto.contractcase.ContractCaseConfig.prototype.setBrokerciaccesstoken = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string brokerBaseUrl = 8;
 * @return {string}
 */
proto.contractcase.ContractCaseConfig.prototype.getBrokerbaseurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.ContractCaseConfig} returns this
 */
proto.contractcase.ContractCaseConfig.prototype.setBrokerbaseurl = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional UsernamePassword brokerBasicAuth = 9;
 * @return {?proto.contractcase.ContractCaseConfig.UsernamePassword}
 */
proto.contractcase.ContractCaseConfig.prototype.getBrokerbasicauth = function() {
  return /** @type{?proto.contractcase.ContractCaseConfig.UsernamePassword} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.ContractCaseConfig.UsernamePassword, 9));
};


/**
 * @param {?proto.contractcase.ContractCaseConfig.UsernamePassword|undefined} value
 * @return {!proto.contractcase.ContractCaseConfig} returns this
*/
proto.contractcase.ContractCaseConfig.prototype.setBrokerbasicauth = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.ContractCaseConfig} returns this
 */
proto.contractcase.ContractCaseConfig.prototype.clearBrokerbasicauth = function() {
  return this.setBrokerbasicauth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.ContractCaseConfig.prototype.hasBrokerbasicauth = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool printResults = 10;
 * @return {boolean}
 */
proto.contractcase.ContractCaseConfig.prototype.getPrintresults = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.contractcase.ContractCaseConfig} returns this
 */
proto.contractcase.ContractCaseConfig.prototype.setPrintresults = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool throwOnFail = 11;
 * @return {boolean}
 */
proto.contractcase.ContractCaseConfig.prototype.getThrowonfail = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.contractcase.ContractCaseConfig} returns this
 */
proto.contractcase.ContractCaseConfig.prototype.setThrowonfail = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * repeated StateHandlerHandle stateHandlers = 12;
 * @return {!Array<!proto.contractcase.StateHandlerHandle>}
 */
proto.contractcase.ContractCaseConfig.prototype.getStatehandlersList = function() {
  return /** @type{!Array<!proto.contractcase.StateHandlerHandle>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.contractcase.StateHandlerHandle, 12));
};


/**
 * @param {!Array<!proto.contractcase.StateHandlerHandle>} value
 * @return {!proto.contractcase.ContractCaseConfig} returns this
*/
proto.contractcase.ContractCaseConfig.prototype.setStatehandlersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.contractcase.StateHandlerHandle=} opt_value
 * @param {number=} opt_index
 * @return {!proto.contractcase.StateHandlerHandle}
 */
proto.contractcase.ContractCaseConfig.prototype.addStatehandlers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.contractcase.StateHandlerHandle, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contractcase.ContractCaseConfig} returns this
 */
proto.contractcase.ContractCaseConfig.prototype.clearStatehandlersList = function() {
  return this.setStatehandlersList([]);
};


/**
 * map<string, TriggerFunctionHandle> triggerFunction = 13;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.contractcase.TriggerFunctionHandle>}
 */
proto.contractcase.ContractCaseConfig.prototype.getTriggerfunctionMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.contractcase.TriggerFunctionHandle>} */ (
      jspb.Message.getMapField(this, 13, opt_noLazyCreate,
      proto.contractcase.TriggerFunctionHandle));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.contractcase.ContractCaseConfig} returns this
 */
proto.contractcase.ContractCaseConfig.prototype.clearTriggerfunctionMap = function() {
  this.getTriggerfunctionMap().clear();
  return this;};


/**
 * optional TriggerFunctionHandle triggerAndTest = 14;
 * @return {?proto.contractcase.TriggerFunctionHandle}
 */
proto.contractcase.ContractCaseConfig.prototype.getTriggerandtest = function() {
  return /** @type{?proto.contractcase.TriggerFunctionHandle} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.TriggerFunctionHandle, 14));
};


/**
 * @param {?proto.contractcase.TriggerFunctionHandle|undefined} value
 * @return {!proto.contractcase.ContractCaseConfig} returns this
*/
proto.contractcase.ContractCaseConfig.prototype.setTriggerandtest = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.ContractCaseConfig} returns this
 */
proto.contractcase.ContractCaseConfig.prototype.clearTriggerandtest = function() {
  return this.setTriggerandtest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.ContractCaseConfig.prototype.hasTriggerandtest = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string baseUrlUnderTest = 15;
 * @return {string}
 */
proto.contractcase.ContractCaseConfig.prototype.getBaseurlundertest = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.ContractCaseConfig} returns this
 */
proto.contractcase.ContractCaseConfig.prototype.setBaseurlundertest = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.DefinitionHandle.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.DefinitionHandle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.DefinitionHandle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.DefinitionHandle.toObject = function(includeInstance, msg) {
  var f, obj = {
    definitionid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.DefinitionHandle}
 */
proto.contractcase.DefinitionHandle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.DefinitionHandle;
  return proto.contractcase.DefinitionHandle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.DefinitionHandle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.DefinitionHandle}
 */
proto.contractcase.DefinitionHandle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefinitionid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.DefinitionHandle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.DefinitionHandle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.DefinitionHandle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.DefinitionHandle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefinitionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string definitionId = 1;
 * @return {string}
 */
proto.contractcase.DefinitionHandle.prototype.getDefinitionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.DefinitionHandle} returns this
 */
proto.contractcase.DefinitionHandle.prototype.setDefinitionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.ResultSuccess.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.ResultSuccess.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.ResultSuccess} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.ResultSuccess.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.ResultSuccess}
 */
proto.contractcase.ResultSuccess.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.ResultSuccess;
  return proto.contractcase.ResultSuccess.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.ResultSuccess} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.ResultSuccess}
 */
proto.contractcase.ResultSuccess.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.ResultSuccess.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.ResultSuccess.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.ResultSuccess} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.ResultSuccess.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.ResultSuccessHasMapPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.ResultSuccessHasMapPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.ResultSuccessHasMapPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.ResultSuccessHasMapPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    map: (f = msg.getMap()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.ResultSuccessHasMapPayload}
 */
proto.contractcase.ResultSuccessHasMapPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.ResultSuccessHasMapPayload;
  return proto.contractcase.ResultSuccessHasMapPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.ResultSuccessHasMapPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.ResultSuccessHasMapPayload}
 */
proto.contractcase.ResultSuccessHasMapPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setMap(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.ResultSuccessHasMapPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.ResultSuccessHasMapPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.ResultSuccessHasMapPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.ResultSuccessHasMapPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMap();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Struct map = 1;
 * @return {?proto.google.protobuf.Struct}
 */
proto.contractcase.ResultSuccessHasMapPayload.prototype.getMap = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 1));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.contractcase.ResultSuccessHasMapPayload} returns this
*/
proto.contractcase.ResultSuccessHasMapPayload.prototype.setMap = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.ResultSuccessHasMapPayload} returns this
 */
proto.contractcase.ResultSuccessHasMapPayload.prototype.clearMap = function() {
  return this.setMap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.ResultSuccessHasMapPayload.prototype.hasMap = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.ResultSuccessHasAnyPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.ResultSuccessHasAnyPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.ResultSuccessHasAnyPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.ResultSuccessHasAnyPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: (f = msg.getPayload()) && google_protobuf_struct_pb.Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.ResultSuccessHasAnyPayload}
 */
proto.contractcase.ResultSuccessHasAnyPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.ResultSuccessHasAnyPayload;
  return proto.contractcase.ResultSuccessHasAnyPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.ResultSuccessHasAnyPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.ResultSuccessHasAnyPayload}
 */
proto.contractcase.ResultSuccessHasAnyPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.ResultSuccessHasAnyPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.ResultSuccessHasAnyPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.ResultSuccessHasAnyPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.ResultSuccessHasAnyPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Value payload = 1;
 * @return {?proto.google.protobuf.Value}
 */
proto.contractcase.ResultSuccessHasAnyPayload.prototype.getPayload = function() {
  return /** @type{?proto.google.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Value, 1));
};


/**
 * @param {?proto.google.protobuf.Value|undefined} value
 * @return {!proto.contractcase.ResultSuccessHasAnyPayload} returns this
*/
proto.contractcase.ResultSuccessHasAnyPayload.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.ResultSuccessHasAnyPayload} returns this
 */
proto.contractcase.ResultSuccessHasAnyPayload.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.ResultSuccessHasAnyPayload.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.ResultFailure.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.ResultFailure.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.ResultFailure} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.ResultFailure.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    location: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.ResultFailure}
 */
proto.contractcase.ResultFailure.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.ResultFailure;
  return proto.contractcase.ResultFailure.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.ResultFailure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.ResultFailure}
 */
proto.contractcase.ResultFailure.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.ResultFailure.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.ResultFailure.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.ResultFailure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.ResultFailure.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string kind = 1;
 * @return {string}
 */
proto.contractcase.ResultFailure.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.ResultFailure} returns this
 */
proto.contractcase.ResultFailure.prototype.setKind = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.contractcase.ResultFailure.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.ResultFailure} returns this
 */
proto.contractcase.ResultFailure.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string location = 3;
 * @return {string}
 */
proto.contractcase.ResultFailure.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.ResultFailure} returns this
 */
proto.contractcase.ResultFailure.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.contractcase.BoundaryResult.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.contractcase.BoundaryResult.ValueCase = {
  VALUE_NOT_SET: 0,
  SUCCESS: 1,
  SUCCESHASMAP: 2,
  SUCCESSHASANY: 3,
  FAILURE: 4
};

/**
 * @return {proto.contractcase.BoundaryResult.ValueCase}
 */
proto.contractcase.BoundaryResult.prototype.getValueCase = function() {
  return /** @type {proto.contractcase.BoundaryResult.ValueCase} */(jspb.Message.computeOneofCase(this, proto.contractcase.BoundaryResult.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.BoundaryResult.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.BoundaryResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.BoundaryResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.BoundaryResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = msg.getSuccess()) && proto.contractcase.ResultSuccess.toObject(includeInstance, f),
    succeshasmap: (f = msg.getSucceshasmap()) && proto.contractcase.ResultSuccessHasMapPayload.toObject(includeInstance, f),
    successhasany: (f = msg.getSuccesshasany()) && proto.contractcase.ResultSuccessHasAnyPayload.toObject(includeInstance, f),
    failure: (f = msg.getFailure()) && proto.contractcase.ResultFailure.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.BoundaryResult}
 */
proto.contractcase.BoundaryResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.BoundaryResult;
  return proto.contractcase.BoundaryResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.BoundaryResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.BoundaryResult}
 */
proto.contractcase.BoundaryResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.contractcase.ResultSuccess;
      reader.readMessage(value,proto.contractcase.ResultSuccess.deserializeBinaryFromReader);
      msg.setSuccess(value);
      break;
    case 2:
      var value = new proto.contractcase.ResultSuccessHasMapPayload;
      reader.readMessage(value,proto.contractcase.ResultSuccessHasMapPayload.deserializeBinaryFromReader);
      msg.setSucceshasmap(value);
      break;
    case 3:
      var value = new proto.contractcase.ResultSuccessHasAnyPayload;
      reader.readMessage(value,proto.contractcase.ResultSuccessHasAnyPayload.deserializeBinaryFromReader);
      msg.setSuccesshasany(value);
      break;
    case 4:
      var value = new proto.contractcase.ResultFailure;
      reader.readMessage(value,proto.contractcase.ResultFailure.deserializeBinaryFromReader);
      msg.setFailure(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.BoundaryResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.BoundaryResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.BoundaryResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.BoundaryResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.contractcase.ResultSuccess.serializeBinaryToWriter
    );
  }
  f = message.getSucceshasmap();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.contractcase.ResultSuccessHasMapPayload.serializeBinaryToWriter
    );
  }
  f = message.getSuccesshasany();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.contractcase.ResultSuccessHasAnyPayload.serializeBinaryToWriter
    );
  }
  f = message.getFailure();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.contractcase.ResultFailure.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResultSuccess success = 1;
 * @return {?proto.contractcase.ResultSuccess}
 */
proto.contractcase.BoundaryResult.prototype.getSuccess = function() {
  return /** @type{?proto.contractcase.ResultSuccess} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.ResultSuccess, 1));
};


/**
 * @param {?proto.contractcase.ResultSuccess|undefined} value
 * @return {!proto.contractcase.BoundaryResult} returns this
*/
proto.contractcase.BoundaryResult.prototype.setSuccess = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.contractcase.BoundaryResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.BoundaryResult} returns this
 */
proto.contractcase.BoundaryResult.prototype.clearSuccess = function() {
  return this.setSuccess(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.BoundaryResult.prototype.hasSuccess = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ResultSuccessHasMapPayload succesHasMap = 2;
 * @return {?proto.contractcase.ResultSuccessHasMapPayload}
 */
proto.contractcase.BoundaryResult.prototype.getSucceshasmap = function() {
  return /** @type{?proto.contractcase.ResultSuccessHasMapPayload} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.ResultSuccessHasMapPayload, 2));
};


/**
 * @param {?proto.contractcase.ResultSuccessHasMapPayload|undefined} value
 * @return {!proto.contractcase.BoundaryResult} returns this
*/
proto.contractcase.BoundaryResult.prototype.setSucceshasmap = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.contractcase.BoundaryResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.BoundaryResult} returns this
 */
proto.contractcase.BoundaryResult.prototype.clearSucceshasmap = function() {
  return this.setSucceshasmap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.BoundaryResult.prototype.hasSucceshasmap = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ResultSuccessHasAnyPayload successHasAny = 3;
 * @return {?proto.contractcase.ResultSuccessHasAnyPayload}
 */
proto.contractcase.BoundaryResult.prototype.getSuccesshasany = function() {
  return /** @type{?proto.contractcase.ResultSuccessHasAnyPayload} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.ResultSuccessHasAnyPayload, 3));
};


/**
 * @param {?proto.contractcase.ResultSuccessHasAnyPayload|undefined} value
 * @return {!proto.contractcase.BoundaryResult} returns this
*/
proto.contractcase.BoundaryResult.prototype.setSuccesshasany = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.contractcase.BoundaryResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.BoundaryResult} returns this
 */
proto.contractcase.BoundaryResult.prototype.clearSuccesshasany = function() {
  return this.setSuccesshasany(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.BoundaryResult.prototype.hasSuccesshasany = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ResultFailure failure = 4;
 * @return {?proto.contractcase.ResultFailure}
 */
proto.contractcase.BoundaryResult.prototype.getFailure = function() {
  return /** @type{?proto.contractcase.ResultFailure} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.ResultFailure, 4));
};


/**
 * @param {?proto.contractcase.ResultFailure|undefined} value
 * @return {!proto.contractcase.BoundaryResult} returns this
*/
proto.contractcase.BoundaryResult.prototype.setFailure = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.contractcase.BoundaryResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.BoundaryResult} returns this
 */
proto.contractcase.BoundaryResult.prototype.clearFailure = function() {
  return this.setFailure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.BoundaryResult.prototype.hasFailure = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.StateHandlerHandle.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.StateHandlerHandle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.StateHandlerHandle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.StateHandlerHandle.toObject = function(includeInstance, msg) {
  var f, obj = {
    handle: jspb.Message.getFieldWithDefault(msg, 1, ""),
    stage: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.StateHandlerHandle}
 */
proto.contractcase.StateHandlerHandle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.StateHandlerHandle;
  return proto.contractcase.StateHandlerHandle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.StateHandlerHandle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.StateHandlerHandle}
 */
proto.contractcase.StateHandlerHandle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHandle(value);
      break;
    case 2:
      var value = /** @type {!proto.contractcase.StateHandlerHandle.Stage} */ (reader.readEnum());
      msg.setStage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.StateHandlerHandle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.StateHandlerHandle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.StateHandlerHandle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.StateHandlerHandle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHandle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStage();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.contractcase.StateHandlerHandle.Stage = {
  SETUP: 0,
  TEARDOWN: 1
};

/**
 * optional string handle = 1;
 * @return {string}
 */
proto.contractcase.StateHandlerHandle.prototype.getHandle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.StateHandlerHandle} returns this
 */
proto.contractcase.StateHandlerHandle.prototype.setHandle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Stage stage = 2;
 * @return {!proto.contractcase.StateHandlerHandle.Stage}
 */
proto.contractcase.StateHandlerHandle.prototype.getStage = function() {
  return /** @type {!proto.contractcase.StateHandlerHandle.Stage} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.contractcase.StateHandlerHandle.Stage} value
 * @return {!proto.contractcase.StateHandlerHandle} returns this
 */
proto.contractcase.StateHandlerHandle.prototype.setStage = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.TriggerFunctionHandle.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.TriggerFunctionHandle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.TriggerFunctionHandle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.TriggerFunctionHandle.toObject = function(includeInstance, msg) {
  var f, obj = {
    handle: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.TriggerFunctionHandle}
 */
proto.contractcase.TriggerFunctionHandle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.TriggerFunctionHandle;
  return proto.contractcase.TriggerFunctionHandle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.TriggerFunctionHandle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.TriggerFunctionHandle}
 */
proto.contractcase.TriggerFunctionHandle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHandle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.TriggerFunctionHandle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.TriggerFunctionHandle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.TriggerFunctionHandle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.TriggerFunctionHandle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHandle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string handle = 1;
 * @return {string}
 */
proto.contractcase.TriggerFunctionHandle.prototype.getHandle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.TriggerFunctionHandle} returns this
 */
proto.contractcase.TriggerFunctionHandle.prototype.setHandle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.contractcase.BeginDefinitionRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.BeginDefinitionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.BeginDefinitionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.BeginDefinitionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.BeginDefinitionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: (f = msg.getConfig()) && proto.contractcase.ContractCaseConfig.toObject(includeInstance, f),
    callerversionsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.BeginDefinitionRequest}
 */
proto.contractcase.BeginDefinitionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.BeginDefinitionRequest;
  return proto.contractcase.BeginDefinitionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.BeginDefinitionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.BeginDefinitionRequest}
 */
proto.contractcase.BeginDefinitionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.contractcase.ContractCaseConfig;
      reader.readMessage(value,proto.contractcase.ContractCaseConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addCallerversions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.BeginDefinitionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.BeginDefinitionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.BeginDefinitionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.BeginDefinitionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.contractcase.ContractCaseConfig.serializeBinaryToWriter
    );
  }
  f = message.getCallerversionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional ContractCaseConfig config = 1;
 * @return {?proto.contractcase.ContractCaseConfig}
 */
proto.contractcase.BeginDefinitionRequest.prototype.getConfig = function() {
  return /** @type{?proto.contractcase.ContractCaseConfig} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.ContractCaseConfig, 1));
};


/**
 * @param {?proto.contractcase.ContractCaseConfig|undefined} value
 * @return {!proto.contractcase.BeginDefinitionRequest} returns this
*/
proto.contractcase.BeginDefinitionRequest.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.BeginDefinitionRequest} returns this
 */
proto.contractcase.BeginDefinitionRequest.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.BeginDefinitionRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string callerVersions = 4;
 * @return {!Array<string>}
 */
proto.contractcase.BeginDefinitionRequest.prototype.getCallerversionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.contractcase.BeginDefinitionRequest} returns this
 */
proto.contractcase.BeginDefinitionRequest.prototype.setCallerversionsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.contractcase.BeginDefinitionRequest} returns this
 */
proto.contractcase.BeginDefinitionRequest.prototype.addCallerversions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contractcase.BeginDefinitionRequest} returns this
 */
proto.contractcase.BeginDefinitionRequest.prototype.clearCallerversionsList = function() {
  return this.setCallerversionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.RunExampleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.RunExampleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.RunExampleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.RunExampleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    exampledefinition: (f = msg.getExampledefinition()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    config: (f = msg.getConfig()) && proto.contractcase.ContractCaseConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.RunExampleRequest}
 */
proto.contractcase.RunExampleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.RunExampleRequest;
  return proto.contractcase.RunExampleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.RunExampleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.RunExampleRequest}
 */
proto.contractcase.RunExampleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExampledefinition(value);
      break;
    case 3:
      var value = new proto.contractcase.ContractCaseConfig;
      reader.readMessage(value,proto.contractcase.ContractCaseConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.RunExampleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.RunExampleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.RunExampleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.RunExampleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExampledefinition();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.contractcase.ContractCaseConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Struct exampleDefinition = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.contractcase.RunExampleRequest.prototype.getExampledefinition = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.contractcase.RunExampleRequest} returns this
*/
proto.contractcase.RunExampleRequest.prototype.setExampledefinition = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.RunExampleRequest} returns this
 */
proto.contractcase.RunExampleRequest.prototype.clearExampledefinition = function() {
  return this.setExampledefinition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.RunExampleRequest.prototype.hasExampledefinition = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ContractCaseConfig config = 3;
 * @return {?proto.contractcase.ContractCaseConfig}
 */
proto.contractcase.RunExampleRequest.prototype.getConfig = function() {
  return /** @type{?proto.contractcase.ContractCaseConfig} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.ContractCaseConfig, 3));
};


/**
 * @param {?proto.contractcase.ContractCaseConfig|undefined} value
 * @return {!proto.contractcase.RunExampleRequest} returns this
*/
proto.contractcase.RunExampleRequest.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.RunExampleRequest} returns this
 */
proto.contractcase.RunExampleRequest.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.RunExampleRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.RunRejectingExampleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.RunRejectingExampleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.RunRejectingExampleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.RunRejectingExampleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    exampledefinition: (f = msg.getExampledefinition()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    config: (f = msg.getConfig()) && proto.contractcase.ContractCaseConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.RunRejectingExampleRequest}
 */
proto.contractcase.RunRejectingExampleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.RunRejectingExampleRequest;
  return proto.contractcase.RunRejectingExampleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.RunRejectingExampleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.RunRejectingExampleRequest}
 */
proto.contractcase.RunRejectingExampleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setExampledefinition(value);
      break;
    case 3:
      var value = new proto.contractcase.ContractCaseConfig;
      reader.readMessage(value,proto.contractcase.ContractCaseConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.RunRejectingExampleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.RunRejectingExampleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.RunRejectingExampleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.RunRejectingExampleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExampledefinition();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.contractcase.ContractCaseConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Struct exampleDefinition = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.contractcase.RunRejectingExampleRequest.prototype.getExampledefinition = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.contractcase.RunRejectingExampleRequest} returns this
*/
proto.contractcase.RunRejectingExampleRequest.prototype.setExampledefinition = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.RunRejectingExampleRequest} returns this
 */
proto.contractcase.RunRejectingExampleRequest.prototype.clearExampledefinition = function() {
  return this.setExampledefinition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.RunRejectingExampleRequest.prototype.hasExampledefinition = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ContractCaseConfig config = 3;
 * @return {?proto.contractcase.ContractCaseConfig}
 */
proto.contractcase.RunRejectingExampleRequest.prototype.getConfig = function() {
  return /** @type{?proto.contractcase.ContractCaseConfig} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.ContractCaseConfig, 3));
};


/**
 * @param {?proto.contractcase.ContractCaseConfig|undefined} value
 * @return {!proto.contractcase.RunRejectingExampleRequest} returns this
*/
proto.contractcase.RunRejectingExampleRequest.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.RunRejectingExampleRequest} returns this
 */
proto.contractcase.RunRejectingExampleRequest.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.RunRejectingExampleRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.StripMatchersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.StripMatchersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.StripMatchersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.StripMatchersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    matcherordata: (f = msg.getMatcherordata()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.StripMatchersRequest}
 */
proto.contractcase.StripMatchersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.StripMatchersRequest;
  return proto.contractcase.StripMatchersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.StripMatchersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.StripMatchersRequest}
 */
proto.contractcase.StripMatchersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setMatcherordata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.StripMatchersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.StripMatchersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.StripMatchersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.StripMatchersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatcherordata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Struct matcherOrData = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.contractcase.StripMatchersRequest.prototype.getMatcherordata = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.contractcase.StripMatchersRequest} returns this
*/
proto.contractcase.StripMatchersRequest.prototype.setMatcherordata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.StripMatchersRequest} returns this
 */
proto.contractcase.StripMatchersRequest.prototype.clearMatcherordata = function() {
  return this.setMatcherordata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.StripMatchersRequest.prototype.hasMatcherordata = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.EndDefinitionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.EndDefinitionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.EndDefinitionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.EndDefinitionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    handle: (f = msg.getHandle()) && proto.contractcase.DefinitionHandle.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.EndDefinitionRequest}
 */
proto.contractcase.EndDefinitionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.EndDefinitionRequest;
  return proto.contractcase.EndDefinitionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.EndDefinitionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.EndDefinitionRequest}
 */
proto.contractcase.EndDefinitionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.contractcase.DefinitionHandle;
      reader.readMessage(value,proto.contractcase.DefinitionHandle.deserializeBinaryFromReader);
      msg.setHandle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.EndDefinitionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.EndDefinitionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.EndDefinitionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.EndDefinitionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHandle();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.contractcase.DefinitionHandle.serializeBinaryToWriter
    );
  }
};


/**
 * optional DefinitionHandle handle = 1;
 * @return {?proto.contractcase.DefinitionHandle}
 */
proto.contractcase.EndDefinitionRequest.prototype.getHandle = function() {
  return /** @type{?proto.contractcase.DefinitionHandle} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.DefinitionHandle, 1));
};


/**
 * @param {?proto.contractcase.DefinitionHandle|undefined} value
 * @return {!proto.contractcase.EndDefinitionRequest} returns this
*/
proto.contractcase.EndDefinitionRequest.prototype.setHandle = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.EndDefinitionRequest} returns this
 */
proto.contractcase.EndDefinitionRequest.prototype.clearHandle = function() {
  return this.setHandle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.EndDefinitionRequest.prototype.hasHandle = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.StateHandlerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.StateHandlerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.StateHandlerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.StateHandlerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    statehandlerhandle: (f = msg.getStatehandlerhandle()) && proto.contractcase.StateHandlerHandle.toObject(includeInstance, f),
    result: (f = msg.getResult()) && proto.contractcase.BoundaryResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.StateHandlerResponse}
 */
proto.contractcase.StateHandlerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.StateHandlerResponse;
  return proto.contractcase.StateHandlerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.StateHandlerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.StateHandlerResponse}
 */
proto.contractcase.StateHandlerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.contractcase.StateHandlerHandle;
      reader.readMessage(value,proto.contractcase.StateHandlerHandle.deserializeBinaryFromReader);
      msg.setStatehandlerhandle(value);
      break;
    case 2:
      var value = new proto.contractcase.BoundaryResult;
      reader.readMessage(value,proto.contractcase.BoundaryResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.StateHandlerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.StateHandlerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.StateHandlerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.StateHandlerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatehandlerhandle();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.contractcase.StateHandlerHandle.serializeBinaryToWriter
    );
  }
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.contractcase.BoundaryResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional StateHandlerHandle stateHandlerHandle = 1;
 * @return {?proto.contractcase.StateHandlerHandle}
 */
proto.contractcase.StateHandlerResponse.prototype.getStatehandlerhandle = function() {
  return /** @type{?proto.contractcase.StateHandlerHandle} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.StateHandlerHandle, 1));
};


/**
 * @param {?proto.contractcase.StateHandlerHandle|undefined} value
 * @return {!proto.contractcase.StateHandlerResponse} returns this
*/
proto.contractcase.StateHandlerResponse.prototype.setStatehandlerhandle = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.StateHandlerResponse} returns this
 */
proto.contractcase.StateHandlerResponse.prototype.clearStatehandlerhandle = function() {
  return this.setStatehandlerhandle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.StateHandlerResponse.prototype.hasStatehandlerhandle = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BoundaryResult result = 2;
 * @return {?proto.contractcase.BoundaryResult}
 */
proto.contractcase.StateHandlerResponse.prototype.getResult = function() {
  return /** @type{?proto.contractcase.BoundaryResult} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.BoundaryResult, 2));
};


/**
 * @param {?proto.contractcase.BoundaryResult|undefined} value
 * @return {!proto.contractcase.StateHandlerResponse} returns this
*/
proto.contractcase.StateHandlerResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.StateHandlerResponse} returns this
 */
proto.contractcase.StateHandlerResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.StateHandlerResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.LogPrinterResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.LogPrinterResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.LogPrinterResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.LogPrinterResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.contractcase.BoundaryResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.LogPrinterResponse}
 */
proto.contractcase.LogPrinterResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.LogPrinterResponse;
  return proto.contractcase.LogPrinterResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.LogPrinterResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.LogPrinterResponse}
 */
proto.contractcase.LogPrinterResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.contractcase.BoundaryResult;
      reader.readMessage(value,proto.contractcase.BoundaryResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.LogPrinterResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.LogPrinterResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.LogPrinterResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.LogPrinterResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.contractcase.BoundaryResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional BoundaryResult result = 1;
 * @return {?proto.contractcase.BoundaryResult}
 */
proto.contractcase.LogPrinterResponse.prototype.getResult = function() {
  return /** @type{?proto.contractcase.BoundaryResult} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.BoundaryResult, 1));
};


/**
 * @param {?proto.contractcase.BoundaryResult|undefined} value
 * @return {!proto.contractcase.LogPrinterResponse} returns this
*/
proto.contractcase.LogPrinterResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.LogPrinterResponse} returns this
 */
proto.contractcase.LogPrinterResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.LogPrinterResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.ResultPrinterResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.ResultPrinterResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.ResultPrinterResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.ResultPrinterResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.contractcase.BoundaryResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.ResultPrinterResponse}
 */
proto.contractcase.ResultPrinterResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.ResultPrinterResponse;
  return proto.contractcase.ResultPrinterResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.ResultPrinterResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.ResultPrinterResponse}
 */
proto.contractcase.ResultPrinterResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.contractcase.BoundaryResult;
      reader.readMessage(value,proto.contractcase.BoundaryResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.ResultPrinterResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.ResultPrinterResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.ResultPrinterResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.ResultPrinterResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.contractcase.BoundaryResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional BoundaryResult result = 1;
 * @return {?proto.contractcase.BoundaryResult}
 */
proto.contractcase.ResultPrinterResponse.prototype.getResult = function() {
  return /** @type{?proto.contractcase.BoundaryResult} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.BoundaryResult, 1));
};


/**
 * @param {?proto.contractcase.BoundaryResult|undefined} value
 * @return {!proto.contractcase.ResultPrinterResponse} returns this
*/
proto.contractcase.ResultPrinterResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.ResultPrinterResponse} returns this
 */
proto.contractcase.ResultPrinterResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.ResultPrinterResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.RunStateHandlerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.RunStateHandlerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.RunStateHandlerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.RunStateHandlerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    statehandlerhandle: (f = msg.getStatehandlerhandle()) && proto.contractcase.StateHandlerHandle.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.RunStateHandlerRequest}
 */
proto.contractcase.RunStateHandlerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.RunStateHandlerRequest;
  return proto.contractcase.RunStateHandlerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.RunStateHandlerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.RunStateHandlerRequest}
 */
proto.contractcase.RunStateHandlerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.contractcase.StateHandlerHandle;
      reader.readMessage(value,proto.contractcase.StateHandlerHandle.deserializeBinaryFromReader);
      msg.setStatehandlerhandle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.RunStateHandlerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.RunStateHandlerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.RunStateHandlerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.RunStateHandlerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatehandlerhandle();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.contractcase.StateHandlerHandle.serializeBinaryToWriter
    );
  }
};


/**
 * optional StateHandlerHandle stateHandlerHandle = 1;
 * @return {?proto.contractcase.StateHandlerHandle}
 */
proto.contractcase.RunStateHandlerRequest.prototype.getStatehandlerhandle = function() {
  return /** @type{?proto.contractcase.StateHandlerHandle} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.StateHandlerHandle, 1));
};


/**
 * @param {?proto.contractcase.StateHandlerHandle|undefined} value
 * @return {!proto.contractcase.RunStateHandlerRequest} returns this
*/
proto.contractcase.RunStateHandlerRequest.prototype.setStatehandlerhandle = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.RunStateHandlerRequest} returns this
 */
proto.contractcase.RunStateHandlerRequest.prototype.clearStatehandlerhandle = function() {
  return this.setStatehandlerhandle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.RunStateHandlerRequest.prototype.hasStatehandlerhandle = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.TriggerFunctionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.TriggerFunctionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.TriggerFunctionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.TriggerFunctionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    triggerfunction: (f = msg.getTriggerfunction()) && proto.contractcase.TriggerFunctionHandle.toObject(includeInstance, f),
    config: (f = msg.getConfig()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.TriggerFunctionRequest}
 */
proto.contractcase.TriggerFunctionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.TriggerFunctionRequest;
  return proto.contractcase.TriggerFunctionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.TriggerFunctionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.TriggerFunctionRequest}
 */
proto.contractcase.TriggerFunctionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.contractcase.TriggerFunctionHandle;
      reader.readMessage(value,proto.contractcase.TriggerFunctionHandle.deserializeBinaryFromReader);
      msg.setTriggerfunction(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.TriggerFunctionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.TriggerFunctionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.TriggerFunctionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.TriggerFunctionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTriggerfunction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.contractcase.TriggerFunctionHandle.serializeBinaryToWriter
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional TriggerFunctionHandle triggerFunction = 1;
 * @return {?proto.contractcase.TriggerFunctionHandle}
 */
proto.contractcase.TriggerFunctionRequest.prototype.getTriggerfunction = function() {
  return /** @type{?proto.contractcase.TriggerFunctionHandle} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.TriggerFunctionHandle, 1));
};


/**
 * @param {?proto.contractcase.TriggerFunctionHandle|undefined} value
 * @return {!proto.contractcase.TriggerFunctionRequest} returns this
*/
proto.contractcase.TriggerFunctionRequest.prototype.setTriggerfunction = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.TriggerFunctionRequest} returns this
 */
proto.contractcase.TriggerFunctionRequest.prototype.clearTriggerfunction = function() {
  return this.setTriggerfunction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.TriggerFunctionRequest.prototype.hasTriggerfunction = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Struct config = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.contractcase.TriggerFunctionRequest.prototype.getConfig = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.contractcase.TriggerFunctionRequest} returns this
*/
proto.contractcase.TriggerFunctionRequest.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.TriggerFunctionRequest} returns this
 */
proto.contractcase.TriggerFunctionRequest.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.TriggerFunctionRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.LogRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.LogRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.LogRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.LogRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    level: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 2, ""),
    version: jspb.Message.getFieldWithDefault(msg, 3, ""),
    typestring: jspb.Message.getFieldWithDefault(msg, 4, ""),
    location: jspb.Message.getFieldWithDefault(msg, 5, ""),
    message: jspb.Message.getFieldWithDefault(msg, 6, ""),
    additional: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.LogRequest}
 */
proto.contractcase.LogRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.LogRequest;
  return proto.contractcase.LogRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.LogRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.LogRequest}
 */
proto.contractcase.LogRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLevel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTypestring(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdditional(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.LogRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.LogRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.LogRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.LogRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLevel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTypestring();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAdditional();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string level = 1;
 * @return {string}
 */
proto.contractcase.LogRequest.prototype.getLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.LogRequest} returns this
 */
proto.contractcase.LogRequest.prototype.setLevel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string timestamp = 2;
 * @return {string}
 */
proto.contractcase.LogRequest.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.LogRequest} returns this
 */
proto.contractcase.LogRequest.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string version = 3;
 * @return {string}
 */
proto.contractcase.LogRequest.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.LogRequest} returns this
 */
proto.contractcase.LogRequest.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string typeString = 4;
 * @return {string}
 */
proto.contractcase.LogRequest.prototype.getTypestring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.LogRequest} returns this
 */
proto.contractcase.LogRequest.prototype.setTypestring = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string location = 5;
 * @return {string}
 */
proto.contractcase.LogRequest.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.LogRequest} returns this
 */
proto.contractcase.LogRequest.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string message = 6;
 * @return {string}
 */
proto.contractcase.LogRequest.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.LogRequest} returns this
 */
proto.contractcase.LogRequest.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string additional = 7;
 * @return {string}
 */
proto.contractcase.LogRequest.prototype.getAdditional = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.LogRequest} returns this
 */
proto.contractcase.LogRequest.prototype.setAdditional = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.PrintMatchErrorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.PrintMatchErrorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.PrintMatchErrorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.PrintMatchErrorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    location: jspb.Message.getFieldWithDefault(msg, 3, ""),
    locationtag: jspb.Message.getFieldWithDefault(msg, 4, ""),
    errortypetag: jspb.Message.getFieldWithDefault(msg, 5, ""),
    expected: jspb.Message.getFieldWithDefault(msg, 6, ""),
    actual: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.PrintMatchErrorRequest}
 */
proto.contractcase.PrintMatchErrorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.PrintMatchErrorRequest;
  return proto.contractcase.PrintMatchErrorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.PrintMatchErrorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.PrintMatchErrorRequest}
 */
proto.contractcase.PrintMatchErrorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationtag(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrortypetag(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpected(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setActual(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.PrintMatchErrorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.PrintMatchErrorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.PrintMatchErrorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.PrintMatchErrorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLocationtag();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getErrortypetag();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getExpected();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getActual();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string kind = 1;
 * @return {string}
 */
proto.contractcase.PrintMatchErrorRequest.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.PrintMatchErrorRequest} returns this
 */
proto.contractcase.PrintMatchErrorRequest.prototype.setKind = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.contractcase.PrintMatchErrorRequest.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.PrintMatchErrorRequest} returns this
 */
proto.contractcase.PrintMatchErrorRequest.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string location = 3;
 * @return {string}
 */
proto.contractcase.PrintMatchErrorRequest.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.PrintMatchErrorRequest} returns this
 */
proto.contractcase.PrintMatchErrorRequest.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string locationTag = 4;
 * @return {string}
 */
proto.contractcase.PrintMatchErrorRequest.prototype.getLocationtag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.PrintMatchErrorRequest} returns this
 */
proto.contractcase.PrintMatchErrorRequest.prototype.setLocationtag = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string errorTypeTag = 5;
 * @return {string}
 */
proto.contractcase.PrintMatchErrorRequest.prototype.getErrortypetag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.PrintMatchErrorRequest} returns this
 */
proto.contractcase.PrintMatchErrorRequest.prototype.setErrortypetag = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string expected = 6;
 * @return {string}
 */
proto.contractcase.PrintMatchErrorRequest.prototype.getExpected = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.PrintMatchErrorRequest} returns this
 */
proto.contractcase.PrintMatchErrorRequest.prototype.setExpected = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string actual = 7;
 * @return {string}
 */
proto.contractcase.PrintMatchErrorRequest.prototype.getActual = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.PrintMatchErrorRequest} returns this
 */
proto.contractcase.PrintMatchErrorRequest.prototype.setActual = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.PrintMessageErrorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.PrintMessageErrorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.PrintMessageErrorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.PrintMessageErrorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    location: jspb.Message.getFieldWithDefault(msg, 3, ""),
    locationtag: jspb.Message.getFieldWithDefault(msg, 4, ""),
    errortypetag: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.PrintMessageErrorRequest}
 */
proto.contractcase.PrintMessageErrorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.PrintMessageErrorRequest;
  return proto.contractcase.PrintMessageErrorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.PrintMessageErrorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.PrintMessageErrorRequest}
 */
proto.contractcase.PrintMessageErrorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationtag(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrortypetag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.PrintMessageErrorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.PrintMessageErrorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.PrintMessageErrorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.PrintMessageErrorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLocationtag();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getErrortypetag();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string kind = 1;
 * @return {string}
 */
proto.contractcase.PrintMessageErrorRequest.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.PrintMessageErrorRequest} returns this
 */
proto.contractcase.PrintMessageErrorRequest.prototype.setKind = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.contractcase.PrintMessageErrorRequest.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.PrintMessageErrorRequest} returns this
 */
proto.contractcase.PrintMessageErrorRequest.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string location = 3;
 * @return {string}
 */
proto.contractcase.PrintMessageErrorRequest.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.PrintMessageErrorRequest} returns this
 */
proto.contractcase.PrintMessageErrorRequest.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string locationTag = 4;
 * @return {string}
 */
proto.contractcase.PrintMessageErrorRequest.prototype.getLocationtag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.PrintMessageErrorRequest} returns this
 */
proto.contractcase.PrintMessageErrorRequest.prototype.setLocationtag = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string errorTypeTag = 5;
 * @return {string}
 */
proto.contractcase.PrintMessageErrorRequest.prototype.getErrortypetag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.PrintMessageErrorRequest} returns this
 */
proto.contractcase.PrintMessageErrorRequest.prototype.setErrortypetag = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.PrintTestTitleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.PrintTestTitleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.PrintTestTitleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.PrintTestTitleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: jspb.Message.getFieldWithDefault(msg, 1, ""),
    icon: jspb.Message.getFieldWithDefault(msg, 2, ""),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    additionaltext: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.PrintTestTitleRequest}
 */
proto.contractcase.PrintTestTitleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.PrintTestTitleRequest;
  return proto.contractcase.PrintTestTitleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.PrintTestTitleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.PrintTestTitleRequest}
 */
proto.contractcase.PrintTestTitleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdditionaltext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.PrintTestTitleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.PrintTestTitleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.PrintTestTitleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.PrintTestTitleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAdditionaltext();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string kind = 1;
 * @return {string}
 */
proto.contractcase.PrintTestTitleRequest.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.PrintTestTitleRequest} returns this
 */
proto.contractcase.PrintTestTitleRequest.prototype.setKind = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string icon = 2;
 * @return {string}
 */
proto.contractcase.PrintTestTitleRequest.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.PrintTestTitleRequest} returns this
 */
proto.contractcase.PrintTestTitleRequest.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.contractcase.PrintTestTitleRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.PrintTestTitleRequest} returns this
 */
proto.contractcase.PrintTestTitleRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string additionalText = 4;
 * @return {string}
 */
proto.contractcase.PrintTestTitleRequest.prototype.getAdditionaltext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.PrintTestTitleRequest} returns this
 */
proto.contractcase.PrintTestTitleRequest.prototype.setAdditionaltext = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.BeginDefinitionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.BeginDefinitionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.BeginDefinitionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.BeginDefinitionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.contractcase.BoundaryResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.BeginDefinitionResponse}
 */
proto.contractcase.BeginDefinitionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.BeginDefinitionResponse;
  return proto.contractcase.BeginDefinitionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.BeginDefinitionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.BeginDefinitionResponse}
 */
proto.contractcase.BeginDefinitionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.contractcase.BoundaryResult;
      reader.readMessage(value,proto.contractcase.BoundaryResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.BeginDefinitionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.BeginDefinitionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.BeginDefinitionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.BeginDefinitionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.contractcase.BoundaryResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional BoundaryResult result = 1;
 * @return {?proto.contractcase.BoundaryResult}
 */
proto.contractcase.BeginDefinitionResponse.prototype.getResult = function() {
  return /** @type{?proto.contractcase.BoundaryResult} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.BoundaryResult, 1));
};


/**
 * @param {?proto.contractcase.BoundaryResult|undefined} value
 * @return {!proto.contractcase.BeginDefinitionResponse} returns this
*/
proto.contractcase.BeginDefinitionResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.BeginDefinitionResponse} returns this
 */
proto.contractcase.BeginDefinitionResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.BeginDefinitionResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.RunExampleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.RunExampleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.RunExampleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.RunExampleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.contractcase.BoundaryResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.RunExampleResponse}
 */
proto.contractcase.RunExampleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.RunExampleResponse;
  return proto.contractcase.RunExampleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.RunExampleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.RunExampleResponse}
 */
proto.contractcase.RunExampleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.contractcase.BoundaryResult;
      reader.readMessage(value,proto.contractcase.BoundaryResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.RunExampleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.RunExampleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.RunExampleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.RunExampleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.contractcase.BoundaryResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional BoundaryResult result = 1;
 * @return {?proto.contractcase.BoundaryResult}
 */
proto.contractcase.RunExampleResponse.prototype.getResult = function() {
  return /** @type{?proto.contractcase.BoundaryResult} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.BoundaryResult, 1));
};


/**
 * @param {?proto.contractcase.BoundaryResult|undefined} value
 * @return {!proto.contractcase.RunExampleResponse} returns this
*/
proto.contractcase.RunExampleResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.RunExampleResponse} returns this
 */
proto.contractcase.RunExampleResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.RunExampleResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.RunRejectingExampleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.RunRejectingExampleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.RunRejectingExampleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.RunRejectingExampleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.contractcase.BoundaryResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.RunRejectingExampleResponse}
 */
proto.contractcase.RunRejectingExampleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.RunRejectingExampleResponse;
  return proto.contractcase.RunRejectingExampleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.RunRejectingExampleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.RunRejectingExampleResponse}
 */
proto.contractcase.RunRejectingExampleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.contractcase.BoundaryResult;
      reader.readMessage(value,proto.contractcase.BoundaryResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.RunRejectingExampleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.RunRejectingExampleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.RunRejectingExampleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.RunRejectingExampleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.contractcase.BoundaryResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional BoundaryResult result = 1;
 * @return {?proto.contractcase.BoundaryResult}
 */
proto.contractcase.RunRejectingExampleResponse.prototype.getResult = function() {
  return /** @type{?proto.contractcase.BoundaryResult} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.BoundaryResult, 1));
};


/**
 * @param {?proto.contractcase.BoundaryResult|undefined} value
 * @return {!proto.contractcase.RunRejectingExampleResponse} returns this
*/
proto.contractcase.RunRejectingExampleResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.RunRejectingExampleResponse} returns this
 */
proto.contractcase.RunRejectingExampleResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.RunRejectingExampleResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.StripMatchersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.StripMatchersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.StripMatchersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.StripMatchersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.contractcase.BoundaryResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.StripMatchersResponse}
 */
proto.contractcase.StripMatchersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.StripMatchersResponse;
  return proto.contractcase.StripMatchersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.StripMatchersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.StripMatchersResponse}
 */
proto.contractcase.StripMatchersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.contractcase.BoundaryResult;
      reader.readMessage(value,proto.contractcase.BoundaryResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.StripMatchersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.StripMatchersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.StripMatchersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.StripMatchersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.contractcase.BoundaryResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional BoundaryResult result = 1;
 * @return {?proto.contractcase.BoundaryResult}
 */
proto.contractcase.StripMatchersResponse.prototype.getResult = function() {
  return /** @type{?proto.contractcase.BoundaryResult} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.BoundaryResult, 1));
};


/**
 * @param {?proto.contractcase.BoundaryResult|undefined} value
 * @return {!proto.contractcase.StripMatchersResponse} returns this
*/
proto.contractcase.StripMatchersResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.StripMatchersResponse} returns this
 */
proto.contractcase.StripMatchersResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.StripMatchersResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.EndDefinitionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.EndDefinitionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.EndDefinitionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.EndDefinitionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.contractcase.BoundaryResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.EndDefinitionResponse}
 */
proto.contractcase.EndDefinitionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.EndDefinitionResponse;
  return proto.contractcase.EndDefinitionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.EndDefinitionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.EndDefinitionResponse}
 */
proto.contractcase.EndDefinitionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.contractcase.BoundaryResult;
      reader.readMessage(value,proto.contractcase.BoundaryResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.EndDefinitionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.EndDefinitionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.EndDefinitionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.EndDefinitionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.contractcase.BoundaryResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional BoundaryResult result = 1;
 * @return {?proto.contractcase.BoundaryResult}
 */
proto.contractcase.EndDefinitionResponse.prototype.getResult = function() {
  return /** @type{?proto.contractcase.BoundaryResult} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.BoundaryResult, 1));
};


/**
 * @param {?proto.contractcase.BoundaryResult|undefined} value
 * @return {!proto.contractcase.EndDefinitionResponse} returns this
*/
proto.contractcase.EndDefinitionResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.EndDefinitionResponse} returns this
 */
proto.contractcase.EndDefinitionResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.EndDefinitionResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.TriggerFunctionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.TriggerFunctionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.TriggerFunctionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.TriggerFunctionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.contractcase.BoundaryResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.TriggerFunctionResponse}
 */
proto.contractcase.TriggerFunctionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.TriggerFunctionResponse;
  return proto.contractcase.TriggerFunctionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.TriggerFunctionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.TriggerFunctionResponse}
 */
proto.contractcase.TriggerFunctionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.contractcase.BoundaryResult;
      reader.readMessage(value,proto.contractcase.BoundaryResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.TriggerFunctionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.TriggerFunctionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.TriggerFunctionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.TriggerFunctionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.contractcase.BoundaryResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional BoundaryResult result = 1;
 * @return {?proto.contractcase.BoundaryResult}
 */
proto.contractcase.TriggerFunctionResponse.prototype.getResult = function() {
  return /** @type{?proto.contractcase.BoundaryResult} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.BoundaryResult, 1));
};


/**
 * @param {?proto.contractcase.BoundaryResult|undefined} value
 * @return {!proto.contractcase.TriggerFunctionResponse} returns this
*/
proto.contractcase.TriggerFunctionResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.TriggerFunctionResponse} returns this
 */
proto.contractcase.TriggerFunctionResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.TriggerFunctionResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.contractcase.DefinitionRequest.oneofGroups_ = [[2,3,4,5,6,7,8,9,10]];

/**
 * @enum {number}
 */
proto.contractcase.DefinitionRequest.KindCase = {
  KIND_NOT_SET: 0,
  BEGINDEFINITION: 2,
  RUNEXAMPLE: 3,
  RUNREJECTINGEXAMPLE: 4,
  STRIPMATCHERS: 5,
  ENDDEFINITION: 6,
  STATEHANDLERRESPONSE: 7,
  LOGPRINTERRESPONSE: 8,
  RESULTPRINTERRESPONSE: 9,
  TRIGGERFUNCTIONRESPONSE: 10
};

/**
 * @return {proto.contractcase.DefinitionRequest.KindCase}
 */
proto.contractcase.DefinitionRequest.prototype.getKindCase = function() {
  return /** @type {proto.contractcase.DefinitionRequest.KindCase} */(jspb.Message.computeOneofCase(this, proto.contractcase.DefinitionRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.DefinitionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.DefinitionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.DefinitionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.DefinitionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    begindefinition: (f = msg.getBegindefinition()) && proto.contractcase.BeginDefinitionRequest.toObject(includeInstance, f),
    runexample: (f = msg.getRunexample()) && proto.contractcase.RunExampleRequest.toObject(includeInstance, f),
    runrejectingexample: (f = msg.getRunrejectingexample()) && proto.contractcase.RunRejectingExampleRequest.toObject(includeInstance, f),
    stripmatchers: (f = msg.getStripmatchers()) && proto.contractcase.StripMatchersRequest.toObject(includeInstance, f),
    enddefinition: (f = msg.getEnddefinition()) && proto.contractcase.EndDefinitionRequest.toObject(includeInstance, f),
    statehandlerresponse: (f = msg.getStatehandlerresponse()) && proto.contractcase.StateHandlerResponse.toObject(includeInstance, f),
    logprinterresponse: (f = msg.getLogprinterresponse()) && proto.contractcase.LogPrinterResponse.toObject(includeInstance, f),
    resultprinterresponse: (f = msg.getResultprinterresponse()) && proto.contractcase.ResultPrinterResponse.toObject(includeInstance, f),
    triggerfunctionresponse: (f = msg.getTriggerfunctionresponse()) && proto.contractcase.TriggerFunctionResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.DefinitionRequest}
 */
proto.contractcase.DefinitionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.DefinitionRequest;
  return proto.contractcase.DefinitionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.DefinitionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.DefinitionRequest}
 */
proto.contractcase.DefinitionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.contractcase.BeginDefinitionRequest;
      reader.readMessage(value,proto.contractcase.BeginDefinitionRequest.deserializeBinaryFromReader);
      msg.setBegindefinition(value);
      break;
    case 3:
      var value = new proto.contractcase.RunExampleRequest;
      reader.readMessage(value,proto.contractcase.RunExampleRequest.deserializeBinaryFromReader);
      msg.setRunexample(value);
      break;
    case 4:
      var value = new proto.contractcase.RunRejectingExampleRequest;
      reader.readMessage(value,proto.contractcase.RunRejectingExampleRequest.deserializeBinaryFromReader);
      msg.setRunrejectingexample(value);
      break;
    case 5:
      var value = new proto.contractcase.StripMatchersRequest;
      reader.readMessage(value,proto.contractcase.StripMatchersRequest.deserializeBinaryFromReader);
      msg.setStripmatchers(value);
      break;
    case 6:
      var value = new proto.contractcase.EndDefinitionRequest;
      reader.readMessage(value,proto.contractcase.EndDefinitionRequest.deserializeBinaryFromReader);
      msg.setEnddefinition(value);
      break;
    case 7:
      var value = new proto.contractcase.StateHandlerResponse;
      reader.readMessage(value,proto.contractcase.StateHandlerResponse.deserializeBinaryFromReader);
      msg.setStatehandlerresponse(value);
      break;
    case 8:
      var value = new proto.contractcase.LogPrinterResponse;
      reader.readMessage(value,proto.contractcase.LogPrinterResponse.deserializeBinaryFromReader);
      msg.setLogprinterresponse(value);
      break;
    case 9:
      var value = new proto.contractcase.ResultPrinterResponse;
      reader.readMessage(value,proto.contractcase.ResultPrinterResponse.deserializeBinaryFromReader);
      msg.setResultprinterresponse(value);
      break;
    case 10:
      var value = new proto.contractcase.TriggerFunctionResponse;
      reader.readMessage(value,proto.contractcase.TriggerFunctionResponse.deserializeBinaryFromReader);
      msg.setTriggerfunctionresponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.DefinitionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.DefinitionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.DefinitionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.DefinitionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBegindefinition();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.contractcase.BeginDefinitionRequest.serializeBinaryToWriter
    );
  }
  f = message.getRunexample();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.contractcase.RunExampleRequest.serializeBinaryToWriter
    );
  }
  f = message.getRunrejectingexample();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.contractcase.RunRejectingExampleRequest.serializeBinaryToWriter
    );
  }
  f = message.getStripmatchers();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.contractcase.StripMatchersRequest.serializeBinaryToWriter
    );
  }
  f = message.getEnddefinition();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.contractcase.EndDefinitionRequest.serializeBinaryToWriter
    );
  }
  f = message.getStatehandlerresponse();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.contractcase.StateHandlerResponse.serializeBinaryToWriter
    );
  }
  f = message.getLogprinterresponse();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.contractcase.LogPrinterResponse.serializeBinaryToWriter
    );
  }
  f = message.getResultprinterresponse();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.contractcase.ResultPrinterResponse.serializeBinaryToWriter
    );
  }
  f = message.getTriggerfunctionresponse();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.contractcase.TriggerFunctionResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.contractcase.DefinitionRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.DefinitionRequest} returns this
 */
proto.contractcase.DefinitionRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional BeginDefinitionRequest beginDefinition = 2;
 * @return {?proto.contractcase.BeginDefinitionRequest}
 */
proto.contractcase.DefinitionRequest.prototype.getBegindefinition = function() {
  return /** @type{?proto.contractcase.BeginDefinitionRequest} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.BeginDefinitionRequest, 2));
};


/**
 * @param {?proto.contractcase.BeginDefinitionRequest|undefined} value
 * @return {!proto.contractcase.DefinitionRequest} returns this
*/
proto.contractcase.DefinitionRequest.prototype.setBegindefinition = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.contractcase.DefinitionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.DefinitionRequest} returns this
 */
proto.contractcase.DefinitionRequest.prototype.clearBegindefinition = function() {
  return this.setBegindefinition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.DefinitionRequest.prototype.hasBegindefinition = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RunExampleRequest runExample = 3;
 * @return {?proto.contractcase.RunExampleRequest}
 */
proto.contractcase.DefinitionRequest.prototype.getRunexample = function() {
  return /** @type{?proto.contractcase.RunExampleRequest} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.RunExampleRequest, 3));
};


/**
 * @param {?proto.contractcase.RunExampleRequest|undefined} value
 * @return {!proto.contractcase.DefinitionRequest} returns this
*/
proto.contractcase.DefinitionRequest.prototype.setRunexample = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.contractcase.DefinitionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.DefinitionRequest} returns this
 */
proto.contractcase.DefinitionRequest.prototype.clearRunexample = function() {
  return this.setRunexample(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.DefinitionRequest.prototype.hasRunexample = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RunRejectingExampleRequest runRejectingExample = 4;
 * @return {?proto.contractcase.RunRejectingExampleRequest}
 */
proto.contractcase.DefinitionRequest.prototype.getRunrejectingexample = function() {
  return /** @type{?proto.contractcase.RunRejectingExampleRequest} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.RunRejectingExampleRequest, 4));
};


/**
 * @param {?proto.contractcase.RunRejectingExampleRequest|undefined} value
 * @return {!proto.contractcase.DefinitionRequest} returns this
*/
proto.contractcase.DefinitionRequest.prototype.setRunrejectingexample = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.contractcase.DefinitionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.DefinitionRequest} returns this
 */
proto.contractcase.DefinitionRequest.prototype.clearRunrejectingexample = function() {
  return this.setRunrejectingexample(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.DefinitionRequest.prototype.hasRunrejectingexample = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional StripMatchersRequest stripMatchers = 5;
 * @return {?proto.contractcase.StripMatchersRequest}
 */
proto.contractcase.DefinitionRequest.prototype.getStripmatchers = function() {
  return /** @type{?proto.contractcase.StripMatchersRequest} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.StripMatchersRequest, 5));
};


/**
 * @param {?proto.contractcase.StripMatchersRequest|undefined} value
 * @return {!proto.contractcase.DefinitionRequest} returns this
*/
proto.contractcase.DefinitionRequest.prototype.setStripmatchers = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.contractcase.DefinitionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.DefinitionRequest} returns this
 */
proto.contractcase.DefinitionRequest.prototype.clearStripmatchers = function() {
  return this.setStripmatchers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.DefinitionRequest.prototype.hasStripmatchers = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional EndDefinitionRequest endDefinition = 6;
 * @return {?proto.contractcase.EndDefinitionRequest}
 */
proto.contractcase.DefinitionRequest.prototype.getEnddefinition = function() {
  return /** @type{?proto.contractcase.EndDefinitionRequest} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.EndDefinitionRequest, 6));
};


/**
 * @param {?proto.contractcase.EndDefinitionRequest|undefined} value
 * @return {!proto.contractcase.DefinitionRequest} returns this
*/
proto.contractcase.DefinitionRequest.prototype.setEnddefinition = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.contractcase.DefinitionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.DefinitionRequest} returns this
 */
proto.contractcase.DefinitionRequest.prototype.clearEnddefinition = function() {
  return this.setEnddefinition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.DefinitionRequest.prototype.hasEnddefinition = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional StateHandlerResponse stateHandlerResponse = 7;
 * @return {?proto.contractcase.StateHandlerResponse}
 */
proto.contractcase.DefinitionRequest.prototype.getStatehandlerresponse = function() {
  return /** @type{?proto.contractcase.StateHandlerResponse} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.StateHandlerResponse, 7));
};


/**
 * @param {?proto.contractcase.StateHandlerResponse|undefined} value
 * @return {!proto.contractcase.DefinitionRequest} returns this
*/
proto.contractcase.DefinitionRequest.prototype.setStatehandlerresponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.contractcase.DefinitionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.DefinitionRequest} returns this
 */
proto.contractcase.DefinitionRequest.prototype.clearStatehandlerresponse = function() {
  return this.setStatehandlerresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.DefinitionRequest.prototype.hasStatehandlerresponse = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional LogPrinterResponse logPrinterResponse = 8;
 * @return {?proto.contractcase.LogPrinterResponse}
 */
proto.contractcase.DefinitionRequest.prototype.getLogprinterresponse = function() {
  return /** @type{?proto.contractcase.LogPrinterResponse} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.LogPrinterResponse, 8));
};


/**
 * @param {?proto.contractcase.LogPrinterResponse|undefined} value
 * @return {!proto.contractcase.DefinitionRequest} returns this
*/
proto.contractcase.DefinitionRequest.prototype.setLogprinterresponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.contractcase.DefinitionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.DefinitionRequest} returns this
 */
proto.contractcase.DefinitionRequest.prototype.clearLogprinterresponse = function() {
  return this.setLogprinterresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.DefinitionRequest.prototype.hasLogprinterresponse = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ResultPrinterResponse resultPrinterResponse = 9;
 * @return {?proto.contractcase.ResultPrinterResponse}
 */
proto.contractcase.DefinitionRequest.prototype.getResultprinterresponse = function() {
  return /** @type{?proto.contractcase.ResultPrinterResponse} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.ResultPrinterResponse, 9));
};


/**
 * @param {?proto.contractcase.ResultPrinterResponse|undefined} value
 * @return {!proto.contractcase.DefinitionRequest} returns this
*/
proto.contractcase.DefinitionRequest.prototype.setResultprinterresponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.contractcase.DefinitionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.DefinitionRequest} returns this
 */
proto.contractcase.DefinitionRequest.prototype.clearResultprinterresponse = function() {
  return this.setResultprinterresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.DefinitionRequest.prototype.hasResultprinterresponse = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional TriggerFunctionResponse triggerFunctionResponse = 10;
 * @return {?proto.contractcase.TriggerFunctionResponse}
 */
proto.contractcase.DefinitionRequest.prototype.getTriggerfunctionresponse = function() {
  return /** @type{?proto.contractcase.TriggerFunctionResponse} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.TriggerFunctionResponse, 10));
};


/**
 * @param {?proto.contractcase.TriggerFunctionResponse|undefined} value
 * @return {!proto.contractcase.DefinitionRequest} returns this
*/
proto.contractcase.DefinitionRequest.prototype.setTriggerfunctionresponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.contractcase.DefinitionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.DefinitionRequest} returns this
 */
proto.contractcase.DefinitionRequest.prototype.clearTriggerfunctionresponse = function() {
  return this.setTriggerfunctionresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.DefinitionRequest.prototype.hasTriggerfunctionresponse = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.contractcase.DefinitionResponse.oneofGroups_ = [[2,3,4,5,6,12,7,8,9,10,11]];

/**
 * @enum {number}
 */
proto.contractcase.DefinitionResponse.KindCase = {
  KIND_NOT_SET: 0,
  RUNSTATEHANDLER: 2,
  LOGREQUEST: 3,
  PRINTMATCHERRORREQUEST: 4,
  PRINTMESSAGEERRORREQUEST: 5,
  PRINTTESTTITLEREQUEST: 6,
  TRIGGERFUNCTIONREQUEST: 12,
  BEGINDEFINITIONRESPONSE: 7,
  RUNEXAMPLERESPONSE: 8,
  RUNREJECTINGEXAMPLERESPONSE: 9,
  STRIPMATCHERSRESPONSE: 10,
  ENDDEFINITIONRESPONSE: 11
};

/**
 * @return {proto.contractcase.DefinitionResponse.KindCase}
 */
proto.contractcase.DefinitionResponse.prototype.getKindCase = function() {
  return /** @type {proto.contractcase.DefinitionResponse.KindCase} */(jspb.Message.computeOneofCase(this, proto.contractcase.DefinitionResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contractcase.DefinitionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.contractcase.DefinitionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contractcase.DefinitionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.DefinitionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    runstatehandler: (f = msg.getRunstatehandler()) && proto.contractcase.RunStateHandlerRequest.toObject(includeInstance, f),
    logrequest: (f = msg.getLogrequest()) && proto.contractcase.LogRequest.toObject(includeInstance, f),
    printmatcherrorrequest: (f = msg.getPrintmatcherrorrequest()) && proto.contractcase.PrintMatchErrorRequest.toObject(includeInstance, f),
    printmessageerrorrequest: (f = msg.getPrintmessageerrorrequest()) && proto.contractcase.PrintMessageErrorRequest.toObject(includeInstance, f),
    printtesttitlerequest: (f = msg.getPrinttesttitlerequest()) && proto.contractcase.PrintTestTitleRequest.toObject(includeInstance, f),
    triggerfunctionrequest: (f = msg.getTriggerfunctionrequest()) && proto.contractcase.TriggerFunctionRequest.toObject(includeInstance, f),
    begindefinitionresponse: (f = msg.getBegindefinitionresponse()) && proto.contractcase.BeginDefinitionResponse.toObject(includeInstance, f),
    runexampleresponse: (f = msg.getRunexampleresponse()) && proto.contractcase.RunExampleResponse.toObject(includeInstance, f),
    runrejectingexampleresponse: (f = msg.getRunrejectingexampleresponse()) && proto.contractcase.RunRejectingExampleResponse.toObject(includeInstance, f),
    stripmatchersresponse: (f = msg.getStripmatchersresponse()) && proto.contractcase.StripMatchersResponse.toObject(includeInstance, f),
    enddefinitionresponse: (f = msg.getEnddefinitionresponse()) && proto.contractcase.EndDefinitionResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contractcase.DefinitionResponse}
 */
proto.contractcase.DefinitionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contractcase.DefinitionResponse;
  return proto.contractcase.DefinitionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contractcase.DefinitionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contractcase.DefinitionResponse}
 */
proto.contractcase.DefinitionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.contractcase.RunStateHandlerRequest;
      reader.readMessage(value,proto.contractcase.RunStateHandlerRequest.deserializeBinaryFromReader);
      msg.setRunstatehandler(value);
      break;
    case 3:
      var value = new proto.contractcase.LogRequest;
      reader.readMessage(value,proto.contractcase.LogRequest.deserializeBinaryFromReader);
      msg.setLogrequest(value);
      break;
    case 4:
      var value = new proto.contractcase.PrintMatchErrorRequest;
      reader.readMessage(value,proto.contractcase.PrintMatchErrorRequest.deserializeBinaryFromReader);
      msg.setPrintmatcherrorrequest(value);
      break;
    case 5:
      var value = new proto.contractcase.PrintMessageErrorRequest;
      reader.readMessage(value,proto.contractcase.PrintMessageErrorRequest.deserializeBinaryFromReader);
      msg.setPrintmessageerrorrequest(value);
      break;
    case 6:
      var value = new proto.contractcase.PrintTestTitleRequest;
      reader.readMessage(value,proto.contractcase.PrintTestTitleRequest.deserializeBinaryFromReader);
      msg.setPrinttesttitlerequest(value);
      break;
    case 12:
      var value = new proto.contractcase.TriggerFunctionRequest;
      reader.readMessage(value,proto.contractcase.TriggerFunctionRequest.deserializeBinaryFromReader);
      msg.setTriggerfunctionrequest(value);
      break;
    case 7:
      var value = new proto.contractcase.BeginDefinitionResponse;
      reader.readMessage(value,proto.contractcase.BeginDefinitionResponse.deserializeBinaryFromReader);
      msg.setBegindefinitionresponse(value);
      break;
    case 8:
      var value = new proto.contractcase.RunExampleResponse;
      reader.readMessage(value,proto.contractcase.RunExampleResponse.deserializeBinaryFromReader);
      msg.setRunexampleresponse(value);
      break;
    case 9:
      var value = new proto.contractcase.RunRejectingExampleResponse;
      reader.readMessage(value,proto.contractcase.RunRejectingExampleResponse.deserializeBinaryFromReader);
      msg.setRunrejectingexampleresponse(value);
      break;
    case 10:
      var value = new proto.contractcase.StripMatchersResponse;
      reader.readMessage(value,proto.contractcase.StripMatchersResponse.deserializeBinaryFromReader);
      msg.setStripmatchersresponse(value);
      break;
    case 11:
      var value = new proto.contractcase.EndDefinitionResponse;
      reader.readMessage(value,proto.contractcase.EndDefinitionResponse.deserializeBinaryFromReader);
      msg.setEnddefinitionresponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contractcase.DefinitionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contractcase.DefinitionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contractcase.DefinitionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contractcase.DefinitionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRunstatehandler();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.contractcase.RunStateHandlerRequest.serializeBinaryToWriter
    );
  }
  f = message.getLogrequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.contractcase.LogRequest.serializeBinaryToWriter
    );
  }
  f = message.getPrintmatcherrorrequest();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.contractcase.PrintMatchErrorRequest.serializeBinaryToWriter
    );
  }
  f = message.getPrintmessageerrorrequest();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.contractcase.PrintMessageErrorRequest.serializeBinaryToWriter
    );
  }
  f = message.getPrinttesttitlerequest();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.contractcase.PrintTestTitleRequest.serializeBinaryToWriter
    );
  }
  f = message.getTriggerfunctionrequest();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.contractcase.TriggerFunctionRequest.serializeBinaryToWriter
    );
  }
  f = message.getBegindefinitionresponse();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.contractcase.BeginDefinitionResponse.serializeBinaryToWriter
    );
  }
  f = message.getRunexampleresponse();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.contractcase.RunExampleResponse.serializeBinaryToWriter
    );
  }
  f = message.getRunrejectingexampleresponse();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.contractcase.RunRejectingExampleResponse.serializeBinaryToWriter
    );
  }
  f = message.getStripmatchersresponse();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.contractcase.StripMatchersResponse.serializeBinaryToWriter
    );
  }
  f = message.getEnddefinitionresponse();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.contractcase.EndDefinitionResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.contractcase.DefinitionResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.contractcase.DefinitionResponse} returns this
 */
proto.contractcase.DefinitionResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional RunStateHandlerRequest runStateHandler = 2;
 * @return {?proto.contractcase.RunStateHandlerRequest}
 */
proto.contractcase.DefinitionResponse.prototype.getRunstatehandler = function() {
  return /** @type{?proto.contractcase.RunStateHandlerRequest} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.RunStateHandlerRequest, 2));
};


/**
 * @param {?proto.contractcase.RunStateHandlerRequest|undefined} value
 * @return {!proto.contractcase.DefinitionResponse} returns this
*/
proto.contractcase.DefinitionResponse.prototype.setRunstatehandler = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.contractcase.DefinitionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.DefinitionResponse} returns this
 */
proto.contractcase.DefinitionResponse.prototype.clearRunstatehandler = function() {
  return this.setRunstatehandler(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.DefinitionResponse.prototype.hasRunstatehandler = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LogRequest logRequest = 3;
 * @return {?proto.contractcase.LogRequest}
 */
proto.contractcase.DefinitionResponse.prototype.getLogrequest = function() {
  return /** @type{?proto.contractcase.LogRequest} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.LogRequest, 3));
};


/**
 * @param {?proto.contractcase.LogRequest|undefined} value
 * @return {!proto.contractcase.DefinitionResponse} returns this
*/
proto.contractcase.DefinitionResponse.prototype.setLogrequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.contractcase.DefinitionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.DefinitionResponse} returns this
 */
proto.contractcase.DefinitionResponse.prototype.clearLogrequest = function() {
  return this.setLogrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.DefinitionResponse.prototype.hasLogrequest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PrintMatchErrorRequest printMatchErrorRequest = 4;
 * @return {?proto.contractcase.PrintMatchErrorRequest}
 */
proto.contractcase.DefinitionResponse.prototype.getPrintmatcherrorrequest = function() {
  return /** @type{?proto.contractcase.PrintMatchErrorRequest} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.PrintMatchErrorRequest, 4));
};


/**
 * @param {?proto.contractcase.PrintMatchErrorRequest|undefined} value
 * @return {!proto.contractcase.DefinitionResponse} returns this
*/
proto.contractcase.DefinitionResponse.prototype.setPrintmatcherrorrequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.contractcase.DefinitionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.DefinitionResponse} returns this
 */
proto.contractcase.DefinitionResponse.prototype.clearPrintmatcherrorrequest = function() {
  return this.setPrintmatcherrorrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.DefinitionResponse.prototype.hasPrintmatcherrorrequest = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional PrintMessageErrorRequest printMessageErrorRequest = 5;
 * @return {?proto.contractcase.PrintMessageErrorRequest}
 */
proto.contractcase.DefinitionResponse.prototype.getPrintmessageerrorrequest = function() {
  return /** @type{?proto.contractcase.PrintMessageErrorRequest} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.PrintMessageErrorRequest, 5));
};


/**
 * @param {?proto.contractcase.PrintMessageErrorRequest|undefined} value
 * @return {!proto.contractcase.DefinitionResponse} returns this
*/
proto.contractcase.DefinitionResponse.prototype.setPrintmessageerrorrequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.contractcase.DefinitionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.DefinitionResponse} returns this
 */
proto.contractcase.DefinitionResponse.prototype.clearPrintmessageerrorrequest = function() {
  return this.setPrintmessageerrorrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.DefinitionResponse.prototype.hasPrintmessageerrorrequest = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional PrintTestTitleRequest printTestTitleRequest = 6;
 * @return {?proto.contractcase.PrintTestTitleRequest}
 */
proto.contractcase.DefinitionResponse.prototype.getPrinttesttitlerequest = function() {
  return /** @type{?proto.contractcase.PrintTestTitleRequest} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.PrintTestTitleRequest, 6));
};


/**
 * @param {?proto.contractcase.PrintTestTitleRequest|undefined} value
 * @return {!proto.contractcase.DefinitionResponse} returns this
*/
proto.contractcase.DefinitionResponse.prototype.setPrinttesttitlerequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.contractcase.DefinitionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.DefinitionResponse} returns this
 */
proto.contractcase.DefinitionResponse.prototype.clearPrinttesttitlerequest = function() {
  return this.setPrinttesttitlerequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.DefinitionResponse.prototype.hasPrinttesttitlerequest = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional TriggerFunctionRequest triggerFunctionRequest = 12;
 * @return {?proto.contractcase.TriggerFunctionRequest}
 */
proto.contractcase.DefinitionResponse.prototype.getTriggerfunctionrequest = function() {
  return /** @type{?proto.contractcase.TriggerFunctionRequest} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.TriggerFunctionRequest, 12));
};


/**
 * @param {?proto.contractcase.TriggerFunctionRequest|undefined} value
 * @return {!proto.contractcase.DefinitionResponse} returns this
*/
proto.contractcase.DefinitionResponse.prototype.setTriggerfunctionrequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.contractcase.DefinitionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.DefinitionResponse} returns this
 */
proto.contractcase.DefinitionResponse.prototype.clearTriggerfunctionrequest = function() {
  return this.setTriggerfunctionrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.DefinitionResponse.prototype.hasTriggerfunctionrequest = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional BeginDefinitionResponse beginDefinitionResponse = 7;
 * @return {?proto.contractcase.BeginDefinitionResponse}
 */
proto.contractcase.DefinitionResponse.prototype.getBegindefinitionresponse = function() {
  return /** @type{?proto.contractcase.BeginDefinitionResponse} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.BeginDefinitionResponse, 7));
};


/**
 * @param {?proto.contractcase.BeginDefinitionResponse|undefined} value
 * @return {!proto.contractcase.DefinitionResponse} returns this
*/
proto.contractcase.DefinitionResponse.prototype.setBegindefinitionresponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.contractcase.DefinitionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.DefinitionResponse} returns this
 */
proto.contractcase.DefinitionResponse.prototype.clearBegindefinitionresponse = function() {
  return this.setBegindefinitionresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.DefinitionResponse.prototype.hasBegindefinitionresponse = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional RunExampleResponse runExampleResponse = 8;
 * @return {?proto.contractcase.RunExampleResponse}
 */
proto.contractcase.DefinitionResponse.prototype.getRunexampleresponse = function() {
  return /** @type{?proto.contractcase.RunExampleResponse} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.RunExampleResponse, 8));
};


/**
 * @param {?proto.contractcase.RunExampleResponse|undefined} value
 * @return {!proto.contractcase.DefinitionResponse} returns this
*/
proto.contractcase.DefinitionResponse.prototype.setRunexampleresponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.contractcase.DefinitionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.DefinitionResponse} returns this
 */
proto.contractcase.DefinitionResponse.prototype.clearRunexampleresponse = function() {
  return this.setRunexampleresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.DefinitionResponse.prototype.hasRunexampleresponse = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional RunRejectingExampleResponse runRejectingExampleResponse = 9;
 * @return {?proto.contractcase.RunRejectingExampleResponse}
 */
proto.contractcase.DefinitionResponse.prototype.getRunrejectingexampleresponse = function() {
  return /** @type{?proto.contractcase.RunRejectingExampleResponse} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.RunRejectingExampleResponse, 9));
};


/**
 * @param {?proto.contractcase.RunRejectingExampleResponse|undefined} value
 * @return {!proto.contractcase.DefinitionResponse} returns this
*/
proto.contractcase.DefinitionResponse.prototype.setRunrejectingexampleresponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.contractcase.DefinitionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.DefinitionResponse} returns this
 */
proto.contractcase.DefinitionResponse.prototype.clearRunrejectingexampleresponse = function() {
  return this.setRunrejectingexampleresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.DefinitionResponse.prototype.hasRunrejectingexampleresponse = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional StripMatchersResponse stripMatchersResponse = 10;
 * @return {?proto.contractcase.StripMatchersResponse}
 */
proto.contractcase.DefinitionResponse.prototype.getStripmatchersresponse = function() {
  return /** @type{?proto.contractcase.StripMatchersResponse} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.StripMatchersResponse, 10));
};


/**
 * @param {?proto.contractcase.StripMatchersResponse|undefined} value
 * @return {!proto.contractcase.DefinitionResponse} returns this
*/
proto.contractcase.DefinitionResponse.prototype.setStripmatchersresponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.contractcase.DefinitionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.DefinitionResponse} returns this
 */
proto.contractcase.DefinitionResponse.prototype.clearStripmatchersresponse = function() {
  return this.setStripmatchersresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.DefinitionResponse.prototype.hasStripmatchersresponse = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional EndDefinitionResponse endDefinitionResponse = 11;
 * @return {?proto.contractcase.EndDefinitionResponse}
 */
proto.contractcase.DefinitionResponse.prototype.getEnddefinitionresponse = function() {
  return /** @type{?proto.contractcase.EndDefinitionResponse} */ (
    jspb.Message.getWrapperField(this, proto.contractcase.EndDefinitionResponse, 11));
};


/**
 * @param {?proto.contractcase.EndDefinitionResponse|undefined} value
 * @return {!proto.contractcase.DefinitionResponse} returns this
*/
proto.contractcase.DefinitionResponse.prototype.setEnddefinitionresponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.contractcase.DefinitionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contractcase.DefinitionResponse} returns this
 */
proto.contractcase.DefinitionResponse.prototype.clearEnddefinitionresponse = function() {
  return this.setEnddefinitionresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contractcase.DefinitionResponse.prototype.hasEnddefinitionresponse = function() {
  return jspb.Message.getField(this, 11) != null;
};


goog.object.extend(exports, proto.contractcase);
